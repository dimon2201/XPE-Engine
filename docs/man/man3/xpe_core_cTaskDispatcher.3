.TH "xpe::core::cTaskDispatcher" 3 "Version 0.1" "XPE-Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
xpe::core::cTaskDispatcher
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <task_manager\&.hpp>\fP
.PP
Inherits \fBxpe::core::cObject\fP\&.
.PP
Inherited by \fBxpe::core::cSimulationDispatcher\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBcTaskDispatcher\fP (\fBu32\fP \fBworkerSize\fP, \fBusize\fP \fBtaskBufferSize\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBcThread::ePriority\fP \fBpriority\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBDispatch\fP (\fBconst\fP \fBsTask\fP &\fBtask\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBDispatch\fP (\fBu32\fP \fBtasksPerThread\fP, \fBu32\fP \fBtaskSize\fP, \fBconst\fP \fBsTask\fP &\fBtask\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBIsBusy\fP ()"
.br
.ti -1c
.RI "\fBu32\fP \fBGetWorkerCount\fP () \fBconst\fP"
.br
.ti -1c
.RI "\fBvoid\fP \fBWait\fP ()"
.br
.in -1c

Public Member Functions inherited from \fBxpe::core::cObject\fP
.in +1c
.ti -1c
.RI "\fBvoid\fP * \fBoperator new\fP (\fBusize\fP \fBbyteSize\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBoperator delete\fP (\fBvoid\fP *\fBaddress\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBPoll\fP ()"
.br
.ti -1c
.RI "\fBvoid\fP \fBInitThread\fP (\fBu32\fP \fBworkerId\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBcThread::ePriority\fP \fBpriority\fP)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBcRingBuffer\fP< \fBsTask\fP > \fBm_TaskBuffer\fP"
.br
.ti -1c
.RI "std::condition_variable \fBm_WakeCondition\fP"
.br
.ti -1c
.RI "std::mutex \fBm_WakeMutex\fP"
.br
.ti -1c
.RI "\fBu64\fP \fBm_TasksTodo\fP"
.br
.ti -1c
.RI "std::atomic< \fBu64\fP > \fBm_TasksDone\fP"
.br
.ti -1c
.RI "\fBu32\fP \fBm_WorkerCount\fP"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "xpe::core::cTaskDispatcher::cTaskDispatcher (\fBu32\fP workerSize, \fBusize\fP taskBufferSize, \fBconst\fP \fBchar\fP * name, \fBcThread::ePriority\fP priority)"

.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP xpe::core::cTaskDispatcher::Dispatch (\fBconst\fP \fBsTask\fP & task)"

.SS "\fBvoid\fP xpe::core::cTaskDispatcher::Dispatch (\fBu32\fP tasksPerThread, \fBu32\fP taskSize, \fBconst\fP \fBsTask\fP & task)"

.SS "\fBu32\fP xpe::core::cTaskDispatcher::GetWorkerCount () const\fR [inline]\fP"

.SS "\fBvoid\fP xpe::core::cTaskDispatcher::InitThread (\fBu32\fP workerId, \fBconst\fP \fBchar\fP * name, \fBcThread::ePriority\fP priority)\fR [protected]\fP"

.SS "\fBbool\fP xpe::core::cTaskDispatcher::IsBusy ()\fR [inline]\fP"

.SS "\fBvoid\fP xpe::core::cTaskDispatcher::Poll ()\fR [inline]\fP, \fR [protected]\fP"

.SS "\fBvoid\fP xpe::core::cTaskDispatcher::Wait ()"

.SH "Member Data Documentation"
.PP 
.SS "\fBcRingBuffer\fP<\fBsTask\fP> xpe::core::cTaskDispatcher::m_TaskBuffer\fR [protected]\fP"

.SS "std::atomic<\fBu64\fP> xpe::core::cTaskDispatcher::m_TasksDone\fR [protected]\fP"

.SS "\fBu64\fP xpe::core::cTaskDispatcher::m_TasksTodo\fR [protected]\fP"

.SS "std::condition_variable xpe::core::cTaskDispatcher::m_WakeCondition\fR [protected]\fP"

.SS "std::mutex xpe::core::cTaskDispatcher::m_WakeMutex\fR [protected]\fP"

.SS "\fBu32\fP xpe::core::cTaskDispatcher::m_WorkerCount\fR [protected]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for XPE-Engine from the source code\&.
