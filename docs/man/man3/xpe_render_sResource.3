.TH "xpe::render::sResource" 3 "Version 0.1" "XPE-Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
xpe::render::sResource
.SH SYNOPSIS
.br
.PP
.PP
\fR#include <core\&.hpp>\fP
.PP
Inherits \fBxpe::core::cObject\fP\&.
.PP
Inherited by \fBxpe::render::sBuffer\fP, \fBxpe::render::sSampler\fP, \fBxpe::render::sShaderStage\fP, and \fBxpe::render::sTexture\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum class \fBeViewType\fP { \fBNONE\fP, \fBDEPTH_STENCIL\fP, \fBRENDER_TARGET\fP, \fBSRV\fP, \fBUAV\fP }"
.br
.ti -1c
.RI "enum class \fBeMapType\fP { \fBREAD\fP, \fBWRITE\fP, \fBREAD_WRITE\fP, \fBWRITE_NO_OVERWRITE\fP, \fBWRITE_DISCARD\fP }"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBvoid\fP * \fBInstance\fP = \fBnullptr\fP"
.br
.ti -1c
.RI "\fBvoid\fP * \fBViewInstance\fP = \fBnullptr\fP"
.br
.ti -1c
.RI "\fBeViewType\fP \fBViewType\fP = \fBeViewType::NONE\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Public Member Functions inherited from \fBxpe::core::cObject\fP
.in +1c
.ti -1c
.RI "\fBvoid\fP * \fBoperator new\fP (\fBusize\fP \fBbyteSize\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBoperator delete\fP (\fBvoid\fP *\fBaddress\fP)"
.br
.in -1c
.SH "Member Enumeration Documentation"
.PP 
.SS "\fBenum\fP \fBclass\fP \fBxpe::render::sResource::eMapType\fP\fR [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIREAD \fP\fP
.TP
\fB\fIWRITE \fP\fP
.TP
\fB\fIREAD_WRITE \fP\fP
.TP
\fB\fIWRITE_NO_OVERWRITE \fP\fP
.TP
\fB\fIWRITE_DISCARD \fP\fP
.SS "\fBenum\fP \fBclass\fP \fBxpe::render::sResource::eViewType\fP\fR [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fINONE \fP\fP
.TP
\fB\fIDEPTH_STENCIL \fP\fP
.TP
\fB\fIRENDER_TARGET \fP\fP
.TP
\fB\fISRV \fP\fP
.TP
\fB\fIUAV \fP\fP
.SH "Member Data Documentation"
.PP 
.SS "\fBvoid\fP* xpe::render::sResource::Instance = \fBnullptr\fP"

.SS "\fBvoid\fP* xpe::render::sResource::ViewInstance = \fBnullptr\fP"

.SS "\fBeViewType\fP xpe::render::sResource::ViewType = \fBeViewType::NONE\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for XPE-Engine from the source code\&.
