.TH "engine/src/rendering/core/context.cpp" 3 "Version 0.1" "XPE-Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
engine/src/rendering/core/context.cpp
.SH SYNOPSIS
.br
.PP
\fR#include <rendering/core/context\&.hpp>\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBxpe\fP"
.br
.ti -1c
.RI "namespace \fBxpe::render\fP"
.br
.ti -1c
.RI "namespace \fBxpe::render::context\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CopyBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP, \fBconst\fP \fBvoid\fP *\fBdata\fP, \fBusize\fP \fBdataByteSize\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CopyBufferOffset\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP, \fBusize\fP \fBoffset\fP, \fBconst\fP \fBvoid\fP *\fBdata\fP, \fBusize\fP \fBdataByteSize\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::MoveBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP, \fBconst\fP \fBvoid\fP *\fBdata\fP, \fBusize\fP \fBdataByteSize\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::MoveBufferOffset\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP, \fBusize\fP \fBoffset\fP, \fBconst\fP \fBvoid\fP *\fBdata\fP, \fBusize\fP \fBdataByteSize\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CopyTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP, \fBconst\fP \fBvoid\fP *\fBdata\fP, \fBusize\fP \fBdataByteSize\fP, \fBu32\fP \fBlayerIndex\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CopyTextureOffset\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP, \fBusize\fP \fBoffset\fP, \fBconst\fP \fBvoid\fP *\fBdata\fP, \fBusize\fP \fBdataByteSize\fP, \fBu32\fP \fBlayerIndex\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::MoveTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP, \fBconst\fP \fBvoid\fP *\fBdata\fP, \fBusize\fP \fBdataByteSize\fP, \fBu32\fP \fBlayerIndex\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::MoveTextureOffset\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP, \fBusize\fP \fBoffset\fP, \fBconst\fP \fBvoid\fP *\fBdata\fP, \fBusize\fP \fBdataByteSize\fP, \fBu32\fP \fBlayerIndex\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CreateTexture\fP (\fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::FreeTexture\fP (\fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::FreeRenderTarget\fP (\fBsRenderTarget\fP &\fBrenderTarget\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::BindRenderTarget\fP (\fBconst\fP \fBvector\fP< \fBvoid\fP * > &\fBcolorViews\fP, \fBvoid\fP *\fBdepthView\fP, \fBsViewport\fP *\fBviewport\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::VSBindBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::VSUnbindBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::PSBindBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::PSUnbindBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::GSBindBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::GSUnbindBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CSBindBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CSUnbindBuffer\fP (\fBconst\fP \fBsBuffer\fP &\fBbuffer\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::VSBindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::VSBindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP, \fBu32\fP \fBslot\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::VSBindTextureSlot\fP (\fBu32\fP \fBslot\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::VSUnbindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::PSBindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::PSBindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP, \fBu32\fP \fBslot\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::PSBindTextureSlot\fP (\fBu32\fP \fBslot\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::PSUnbindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::GSBindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::GSBindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP, \fBu32\fP \fBslot\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::GSBindTextureSlot\fP (\fBu32\fP \fBslot\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::GSUnbindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CSBindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CSBindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP, \fBu32\fP \fBslot\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CSBindTextureSlot\fP (\fBu32\fP \fBslot\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CSUnbindTexture\fP (\fBconst\fP \fBsTexture\fP &\fBtexture\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::VSBindSampler\fP (\fBconst\fP \fBsSampler\fP &\fBsampler\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::VSUnbindSampler\fP (\fBconst\fP \fBsSampler\fP &\fBsampler\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::PSBindSampler\fP (\fBconst\fP \fBsSampler\fP &\fBsampler\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::PSUnbindSampler\fP (\fBconst\fP \fBsSampler\fP &\fBsampler\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::GSBindSampler\fP (\fBconst\fP \fBsSampler\fP &\fBsampler\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::GSUnbindSampler\fP (\fBconst\fP \fBsSampler\fP &\fBsampler\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CSBindSampler\fP (\fBconst\fP \fBsSampler\fP &\fBsampler\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBxpe::render::context::CSUnbindSampler\fP (\fBconst\fP \fBsSampler\fP &\fBsampler\fP)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBvoid\fP * \fBxpe::render::context::SwapchainTargetView\fP = \fBnullptr\fP"
.br
.ti -1c
.RI "\fBvoid\fP * \fBxpe::render::context::SwapchainTextureInstance\fP = \fBnullptr\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for XPE-Engine from the source code\&.
