.TH "xpe::res" 3 "Version 0.1" "XPE-Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
xpe::res
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBcJson\fP"
.br
.ti -1c
.RI "class \fBcXml\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBbool\fP \fBReadJsonFile\fP (\fBconst\fP \fBchar\fP *\fBfilepath\fP, \fBcJson\fP &\fBobject\fP)"
.br
.ti -1c
.RI "\fBbool\fP \fBWriteJsonFile\fP (\fBconst\fP \fBchar\fP *\fBfilepath\fP, \fBcJson\fP &\fBobject\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBbool\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBu8\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBint\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBu32\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBfloat\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBdouble\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBu64\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBs64\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBstring\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, std::string &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, glm::vec2 &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, glm::vec3 &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBSetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, glm::vec4 &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBbool\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBu8\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBint\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBu32\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBfloat\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBdouble\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBu64\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBs64\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, \fBstring\fP &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, std::string &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, glm::vec2 &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, glm::vec3 &\fBvalue\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBGetXmlValue\fP (\fBxml\fP &\fBroot\fP, \fBconst\fP \fBchar\fP *\fBname\fP, glm::vec4 &\fBvalue\fP)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBbool\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBdouble\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBfloat\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, glm::vec2 & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, glm::vec3 & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, glm::vec4 & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBint\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBs64\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, std::string & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBstring\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBu32\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBu64\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::GetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBu8\fP & value)"

.SS "\fBENGINE_API\fP \fBbool\fP xpe::res::ReadJsonFile (\fBconst\fP \fBchar\fP * filepath, \fBcJson\fP & object)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBbool\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBdouble\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBfloat\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, glm::vec2 & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, glm::vec3 & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, glm::vec4 & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBint\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBs64\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, std::string & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBstring\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBu32\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBu64\fP & value)"

.SS "\fBENGINE_API\fP \fBvoid\fP xpe::res::SetXmlValue (\fBxml\fP & root, \fBconst\fP \fBchar\fP * name, \fBu8\fP & value)"

.SS "\fBENGINE_API\fP \fBbool\fP xpe::res::WriteJsonFile (\fBconst\fP \fBchar\fP * filepath, \fBcJson\fP & object)"

.SH "Author"
.PP 
Generated automatically by Doxygen for XPE-Engine from the source code\&.
