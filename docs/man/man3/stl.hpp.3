.TH "engine/src/stl/stl.hpp" 3 "Version 0.1" "XPE-Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
engine/src/stl/stl.hpp
.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBxpe\fP"
.br
.ti -1c
.RI "namespace \fBxpe::core\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "\fBtypedef\fP std::basic_string< \fBchar\fP, std::char_traits< \fBchar\fP >, \fBcMainAllocator\fP< \fBchar\fP > > \fBxpe::core::string\fP"
.br
.ti -1c
.RI "\fBtypedef\fP std::basic_string< \fBchar\fP, std::char_traits< \fBchar\fP >, \fBcHotAllocator\fP< \fBchar\fP > > \fBxpe::core::hstring\fP"
.br
.ti -1c
.RI "\fBtypedef\fP std::basic_stringstream< \fBchar\fP, std::char_traits< \fBchar\fP >, \fBcMainAllocator\fP< \fBchar\fP > > \fBxpe::core::stringstream\fP"
.br
.ti -1c
.RI "\fBtypedef\fP std::basic_stringstream< \fBchar\fP, std::char_traits< \fBchar\fP >, \fBcHotAllocator\fP< \fBchar\fP > > \fBxpe::core::hstringstream\fP"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBT\fP > \fBusing\fP \fBxpe::core::vector\fP = std::vector<\fBT\fP, \fBcMainAllocator\fP<\fBT\fP>>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBT\fP > \fBusing\fP \fBxpe::core::hvector\fP = std::vector<\fBT\fP, \fBcHotAllocator\fP<\fBT\fP>>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBT\fP , \fBsize_t\fP Size> \fBusing\fP \fBxpe::core::array\fP = std::array<\fBT\fP, Size>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBK\fP , \fBtypename\fP \fBV\fP > \fBusing\fP \fBxpe::core::map\fP = std::map<\fBK\fP, \fBV\fP, std::equal_to<\fBK\fP>, \fBcMainAllocator\fP<std::pair<\fBK\fP, \fBV\fP>>>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBK\fP , \fBtypename\fP \fBV\fP > \fBusing\fP \fBxpe::core::hmap\fP = std::map<\fBK\fP, \fBV\fP, std::equal_to<\fBK\fP>, \fBcHotAllocator\fP<std::pair<\fBK\fP, \fBV\fP>>>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBK\fP , \fBtypename\fP \fBComparator\fP  = std::less<K>> \fBusing\fP \fBxpe::core::set\fP = std::set<\fBK\fP, \fBComparator\fP, \fBcMainAllocator\fP<\fBK\fP>>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBK\fP , \fBtypename\fP \fBComparator\fP  = std::less<K>> \fBusing\fP \fBxpe::core::hset\fP = std::set<\fBK\fP, \fBComparator\fP, \fBcHotAllocator\fP<\fBK\fP>>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBK\fP > \fBusing\fP \fBxpe::core::unordered_set\fP = std::unordered_set<\fBK\fP, std::hash<\fBK\fP>, std::equal_to<\fBK\fP>, \fBcMainAllocator\fP<\fBK\fP>>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBK\fP > \fBusing\fP \fBxpe::core::hunordered_set\fP = std::unordered_set<\fBK\fP, std::hash<\fBK\fP>, std::equal_to<\fBK\fP>, \fBcHotAllocator\fP<\fBK\fP>>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBK\fP , \fBtypename\fP \fBV\fP > \fBusing\fP \fBxpe::core::unordered_map\fP = std::unordered_map<\fBK\fP, \fBV\fP, std::hash<\fBK\fP>, std::equal_to<\fBK\fP>, \fBcMainAllocator\fP<std::pair<\fBK\fP, \fBV\fP>>>"
.br
.ti -1c
.RI "template<\fBtypename\fP \fBK\fP , \fBtypename\fP \fBV\fP > \fBusing\fP \fBxpe::core::hunordered_map\fP = std::unordered_map<\fBK\fP, \fBV\fP, std::hash<\fBK\fP>, std::equal_to<\fBK\fP>, \fBcHotAllocator\fP<std::pair<\fBK\fP, \fBV\fP>>>"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBENGINE_API\fP \fBu64\fP \fBxpe::core::Hash\fP (\fBconst\fP \fBstring\fP &\fBstr\fP)"
.br
.ti -1c
.RI "\fBENGINE_API\fP \fBu64\fP \fBxpe::core::Hash\fP (\fBconst\fP \fBhstring\fP &\fBstr\fP)"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for XPE-Engine from the source code\&.
