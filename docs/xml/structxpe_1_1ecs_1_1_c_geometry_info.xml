<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structxpe_1_1ecs_1_1_c_geometry_info" kind="struct" language="C++" prot="public">
    <compoundname>xpe::ecs::CGeometryInfo</compoundname>
    <basecompoundref refid="structxpe_1_1render_1_1s_geometry_info" prot="public" virt="non-virtual">xpe::render::sGeometryInfo</basecompoundref>
    <includes refid="components_8hpp" local="no">components.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structxpe_1_1ecs_1_1_c_geometry_info_1a29a10cfbc2c18bc2312c7f574cb59704" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>xpe::ecs::CGeometryInfo::CGeometryInfo</definition>
        <argsstring>(const sGeometryInfo &amp;geometryInfo={})</argsstring>
        <name>CGeometryInfo</name>
        <qualifiedname>xpe::ecs::CGeometryInfo::CGeometryInfo</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1render_1_1s_geometry_info" kindref="compound">sGeometryInfo</ref> &amp;</type>
          <declname>geometryInfo</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/ecs/components.hpp" line="223" column="13" bodyfile="engine/src/ecs/components.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="structxpe_1_1ecs_1_1_c_geometry_info_1acd4029841bf61d3b9d8d89d42564631c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>xpe::ecs::CGeometryInfo::CGeometryInfo</definition>
        <argsstring>(sGeometryInfo &amp;&amp;geometryInfo)</argsstring>
        <name>CGeometryInfo</name>
        <qualifiedname>xpe::ecs::CGeometryInfo::CGeometryInfo</qualifiedname>
        <param>
          <type><ref refid="structxpe_1_1render_1_1s_geometry_info" kindref="compound">sGeometryInfo</ref> &amp;&amp;</type>
          <declname>geometryInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/ecs/components.hpp" line="224" column="13" bodyfile="engine/src/ecs/components.hpp" bodystart="224" bodyend="224"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>xpe::ecs::CGeometryInfo</label>
        <link refid="structxpe_1_1ecs_1_1_c_geometry_info"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>xpe::render::sGeometryInfo</label>
        <link refid="structxpe_1_1render_1_1s_geometry_info"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>xpe::ecs::CGeometryInfo</label>
        <link refid="structxpe_1_1ecs_1_1_c_geometry_info"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>xpe::render::sGeometryInfo</label>
        <link refid="structxpe_1_1render_1_1s_geometry_info"/>
      </node>
    </collaborationgraph>
    <location file="engine/src/ecs/components.hpp" line="221" column="9" bodyfile="engine/src/ecs/components.hpp" bodystart="222" bodyend="225"/>
    <listofallmembers>
      <member refid="structxpe_1_1ecs_1_1_c_geometry_info_1a29a10cfbc2c18bc2312c7f574cb59704" prot="public" virt="non-virtual"><scope>xpe::ecs::CGeometryInfo</scope><name>CGeometryInfo</name></member>
      <member refid="structxpe_1_1ecs_1_1_c_geometry_info_1acd4029841bf61d3b9d8d89d42564631c" prot="public" virt="non-virtual"><scope>xpe::ecs::CGeometryInfo</scope><name>CGeometryInfo</name></member>
      <member refid="structxpe_1_1render_1_1s_geometry_info_1a15819dd9d5922bdecb2101c7387ee006" prot="public" virt="non-virtual"><scope>xpe::ecs::CGeometryInfo</scope><name>Entities</name></member>
      <member refid="structxpe_1_1render_1_1s_geometry_info_1a849b825891604d340adc2c567a6d4a61" prot="public" virt="non-virtual"><scope>xpe::ecs::CGeometryInfo</scope><name>IndexCount</name></member>
      <member refid="structxpe_1_1render_1_1s_geometry_info_1a7b99f88471db9da763de77cb33747181" prot="public" virt="non-virtual"><scope>xpe::ecs::CGeometryInfo</scope><name>IndexOffset</name></member>
      <member refid="structxpe_1_1render_1_1s_geometry_info_1a9312c855bfe65f73db55cee0182c64f6" prot="public" virt="non-virtual"><scope>xpe::ecs::CGeometryInfo</scope><name>PrimitiveTopology</name></member>
      <member refid="structxpe_1_1render_1_1s_geometry_info_1a057fd20f951d01093445e05b750402f2" prot="public" virt="non-virtual"><scope>xpe::ecs::CGeometryInfo</scope><name>VertexCount</name></member>
      <member refid="structxpe_1_1render_1_1s_geometry_info_1a598b0bd2c9c16d9f2a9567be51c258b2" prot="public" virt="non-virtual"><scope>xpe::ecs::CGeometryInfo</scope><name>VertexOffset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
