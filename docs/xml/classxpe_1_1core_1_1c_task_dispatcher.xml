<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classxpe_1_1core_1_1c_task_dispatcher" kind="class" language="C++" prot="public">
    <compoundname>xpe::core::cTaskDispatcher</compoundname>
    <basecompoundref refid="classxpe_1_1core_1_1c_object" prot="public" virt="non-virtual">xpe::core::cObject</basecompoundref>
    <derivedcompoundref refid="classxpe_1_1core_1_1c_simulation_dispatcher" prot="public" virt="non-virtual">xpe::core::cSimulationDispatcher</derivedcompoundref>
    <includes refid="task__manager_8hpp" local="no">task_manager.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_task_dispatcher_1a6b88d57d92d2d9745c3df4d684edea50" prot="protected" static="no" mutable="no">
        <type><ref refid="classxpe_1_1core_1_1c_ring_buffer" kindref="compound">cRingBuffer</ref>&lt; <ref refid="structxpe_1_1core_1_1s_task" kindref="compound">sTask</ref> &gt;</type>
        <definition>cRingBuffer&lt;sTask&gt; xpe::core::cTaskDispatcher::m_TaskBuffer</definition>
        <argsstring></argsstring>
        <name>m_TaskBuffer</name>
        <qualifiedname>xpe::core::cTaskDispatcher::m_TaskBuffer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="64" column="25" bodyfile="engine/src/core/task_manager.hpp" bodystart="64" bodyend="-1"/>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a8b31fc506fb0e2f9f8226ef416c895fc" compoundref="task__manager_8cpp" startline="27" endline="36">cTaskDispatcher</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a9c0c18dbf564186d946ca962fea4b898" compoundref="task__manager_8cpp" startline="38" endline="46">Dispatch</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a4811adb9542a927aa10e811016738a03" compoundref="task__manager_8cpp" startline="48" endline="75">Dispatch</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a0ed830ba0ff8290188850e8d323ac592" compoundref="task__manager_8cpp" startline="100" endline="119">InitThread</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_task_dispatcher_1ab138311f4c5844fc1ffdd9b575c5e057" prot="protected" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable xpe::core::cTaskDispatcher::m_WakeCondition</definition>
        <argsstring></argsstring>
        <name>m_WakeCondition</name>
        <qualifiedname>xpe::core::cTaskDispatcher::m_WakeCondition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="65" column="37" bodyfile="engine/src/core/task_manager.hpp" bodystart="65" bodyend="-1"/>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a9c0c18dbf564186d946ca962fea4b898" compoundref="task__manager_8cpp" startline="38" endline="46">Dispatch</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a4811adb9542a927aa10e811016738a03" compoundref="task__manager_8cpp" startline="48" endline="75">Dispatch</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a65dcf432e2c479da29f08ae128cee2b4" compoundref="task__manager_8cpp" startline="94" endline="98">Poll</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_task_dispatcher_1aeed8047b981e99e67ae3025006d586e9" prot="protected" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex xpe::core::cTaskDispatcher::m_WakeMutex</definition>
        <argsstring></argsstring>
        <name>m_WakeMutex</name>
        <qualifiedname>xpe::core::cTaskDispatcher::m_WakeMutex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="66" column="24" bodyfile="engine/src/core/task_manager.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_task_dispatcher_1a122a3bb1bfa10ac948f995fe3a5c820e" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a5339d437e076788ee8b8217188685ee6" kindref="member">u64</ref></type>
        <definition>u64 xpe::core::cTaskDispatcher::m_TasksTodo</definition>
        <argsstring></argsstring>
        <name>m_TasksTodo</name>
        <qualifiedname>xpe::core::cTaskDispatcher::m_TasksTodo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="67" column="17" bodyfile="engine/src/core/task_manager.hpp" bodystart="67" bodyend="-1"/>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a8b31fc506fb0e2f9f8226ef416c895fc" compoundref="task__manager_8cpp" startline="27" endline="36">cTaskDispatcher</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a9c0c18dbf564186d946ca962fea4b898" compoundref="task__manager_8cpp" startline="38" endline="46">Dispatch</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a4811adb9542a927aa10e811016738a03" compoundref="task__manager_8cpp" startline="48" endline="75">Dispatch</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a854d3943678b3a7acba946444716cd3f" compoundref="task__manager_8cpp" startline="77" endline="80">IsBusy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_task_dispatcher_1a2a1a61cf6c2caea1de30583c0146f7b5" prot="protected" static="no" mutable="no">
        <type>std::atomic&lt; <ref refid="namespacexpe_1_1core_1a5339d437e076788ee8b8217188685ee6" kindref="member">u64</ref> &gt;</type>
        <definition>std::atomic&lt;u64&gt; xpe::core::cTaskDispatcher::m_TasksDone</definition>
        <argsstring></argsstring>
        <name>m_TasksDone</name>
        <qualifiedname>xpe::core::cTaskDispatcher::m_TasksDone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="68" column="25" bodyfile="engine/src/core/task_manager.hpp" bodystart="68" bodyend="-1"/>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a8b31fc506fb0e2f9f8226ef416c895fc" compoundref="task__manager_8cpp" startline="27" endline="36">cTaskDispatcher</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a854d3943678b3a7acba946444716cd3f" compoundref="task__manager_8cpp" startline="77" endline="80">IsBusy</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_task_dispatcher_1a932baf4d6c1c03c8968a8129da4ab6d1" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc" kindref="member">u32</ref></type>
        <definition>u32 xpe::core::cTaskDispatcher::m_WorkerCount</definition>
        <argsstring></argsstring>
        <name>m_WorkerCount</name>
        <qualifiedname>xpe::core::cTaskDispatcher::m_WorkerCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="69" column="17" bodyfile="engine/src/core/task_manager.hpp" bodystart="69" bodyend="-1"/>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a8b31fc506fb0e2f9f8226ef416c895fc" compoundref="task__manager_8cpp" startline="27" endline="36">cTaskDispatcher</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a49bf69fb2bde1506378fb05c6c9442a7" compoundref="task__manager_8cpp" startline="82" endline="85">GetWorkerCount</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classxpe_1_1core_1_1c_task_dispatcher_1a8b31fc506fb0e2f9f8226ef416c895fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xpe::core::cTaskDispatcher::cTaskDispatcher</definition>
        <argsstring>(u32 workerSize, usize taskBufferSize, const char *name, cThread::ePriority priority)</argsstring>
        <name>cTaskDispatcher</name>
        <qualifiedname>xpe::core::cTaskDispatcher::cTaskDispatcher</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc" kindref="member">u32</ref></type>
          <declname>workerSize</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
          <declname>taskBufferSize</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">char</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classxpe_1_1core_1_1c_thread_1a714e0fbeefe921f4fbe195de023a4fa1" kindref="member">cThread::ePriority</ref></type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="41" column="13" bodyfile="engine/src/core/task_manager.cpp" bodystart="27" bodyend="36"/>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a0ed830ba0ff8290188850e8d323ac592" compoundref="task__manager_8cpp" startline="100" endline="119">InitThread</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a6b88d57d92d2d9745c3df4d684edea50" compoundref="task__manager_8hpp" startline="64">m_TaskBuffer</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a2a1a61cf6c2caea1de30583c0146f7b5" compoundref="task__manager_8hpp" startline="68">m_TasksDone</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a122a3bb1bfa10ac948f995fe3a5c820e" compoundref="task__manager_8hpp" startline="67">m_TasksTodo</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a932baf4d6c1c03c8968a8129da4ab6d1" compoundref="task__manager_8hpp" startline="69">m_WorkerCount</references>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_task_dispatcher_1a9c0c18dbf564186d946ca962fea4b898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref></type>
        <definition>void xpe::core::cTaskDispatcher::Dispatch</definition>
        <argsstring>(const sTask &amp;task)</argsstring>
        <name>Dispatch</name>
        <qualifiedname>xpe::core::cTaskDispatcher::Dispatch</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_task" kindref="compound">sTask</ref> &amp;</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="44" column="18" bodyfile="engine/src/core/task_manager.cpp" bodystart="38" bodyend="46"/>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a6b88d57d92d2d9745c3df4d684edea50" compoundref="task__manager_8hpp" startline="64">m_TaskBuffer</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a122a3bb1bfa10ac948f995fe3a5c820e" compoundref="task__manager_8hpp" startline="67">m_TasksTodo</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1ab138311f4c5844fc1ffdd9b575c5e057" compoundref="task__manager_8hpp" startline="65">m_WakeCondition</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a65dcf432e2c479da29f08ae128cee2b4" compoundref="task__manager_8cpp" startline="94" endline="98">Poll</references>
        <referencedby refid="classxpe_1_1core_1_1c_task_manager_1a0e82de392ba02bbe3ad1303ef2d4d813" compoundref="task__manager_8cpp" startline="160" endline="180">xpe::core::cTaskManager::SubmitTask</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_simulation_dispatcher_1a5325d7dece59cf7a08b8dbef17764317" compoundref="task__manager_8cpp" startline="123" endline="132">xpe::core::cSimulationDispatcher::submitTask</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_manager_1a7fd38c7c9b4021c105bcb12e96a469c3" compoundref="task__manager_8cpp" startline="182" endline="202">xpe::core::cTaskManager::SubmitTask</referencedby>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_task_dispatcher_1a4811adb9542a927aa10e811016738a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref></type>
        <definition>void xpe::core::cTaskDispatcher::Dispatch</definition>
        <argsstring>(u32 tasksPerThread, u32 taskSize, const sTask &amp;task)</argsstring>
        <name>Dispatch</name>
        <qualifiedname>xpe::core::cTaskDispatcher::Dispatch</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc" kindref="member">u32</ref></type>
          <declname>tasksPerThread</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc" kindref="member">u32</ref></type>
          <declname>taskSize</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_task" kindref="compound">sTask</ref> &amp;</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="49" column="18" bodyfile="engine/src/core/task_manager.cpp" bodystart="48" bodyend="75"/>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a6b88d57d92d2d9745c3df4d684edea50" compoundref="task__manager_8hpp" startline="64">m_TaskBuffer</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a122a3bb1bfa10ac948f995fe3a5c820e" compoundref="task__manager_8hpp" startline="67">m_TasksTodo</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1ab138311f4c5844fc1ffdd9b575c5e057" compoundref="task__manager_8hpp" startline="65">m_WakeCondition</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a65dcf432e2c479da29f08ae128cee2b4" compoundref="task__manager_8cpp" startline="94" endline="98">Poll</references>
        <references refid="structxpe_1_1core_1_1s_task_1ae37dc636337031739b2ea80a97c78f94" compoundref="task__manager_8hpp" startline="23" endline="23">xpe::core::sTask::Todo</references>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_task_dispatcher_1a854d3943678b3a7acba946444716cd3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">bool</ref></type>
        <definition>bool xpe::core::cTaskDispatcher::IsBusy</definition>
        <argsstring>()</argsstring>
        <name>IsBusy</name>
        <qualifiedname>xpe::core::cTaskDispatcher::IsBusy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="51" column="25" bodyfile="engine/src/core/task_manager.cpp" bodystart="77" bodyend="80"/>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a2a1a61cf6c2caea1de30583c0146f7b5" compoundref="task__manager_8hpp" startline="68">m_TasksDone</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a122a3bb1bfa10ac948f995fe3a5c820e" compoundref="task__manager_8hpp" startline="67">m_TasksTodo</references>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a5b0ee750b601bbefec2f5d142c5704b3" compoundref="task__manager_8cpp" startline="87" endline="92">Wait</referencedby>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_task_dispatcher_1a49bf69fb2bde1506378fb05c6c9442a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc" kindref="member">u32</ref></type>
        <definition>u32 xpe::core::cTaskDispatcher::GetWorkerCount</definition>
        <argsstring>() const</argsstring>
        <name>GetWorkerCount</name>
        <qualifiedname>xpe::core::cTaskDispatcher::GetWorkerCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="53" column="24" bodyfile="engine/src/core/task_manager.cpp" bodystart="82" bodyend="85"/>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a932baf4d6c1c03c8968a8129da4ab6d1" compoundref="task__manager_8hpp" startline="69">m_WorkerCount</references>
        <referencedby refid="classxpe_1_1core_1_1c_simulation_dispatcher_1a6e43096a7f0c9dbaad09a67ee017328a" compoundref="task__manager_8cpp" startline="134" endline="137">xpe::core::cSimulationDispatcher::getWorkerCount</referencedby>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_task_dispatcher_1a5b0ee750b601bbefec2f5d142c5704b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref></type>
        <definition>void xpe::core::cTaskDispatcher::Wait</definition>
        <argsstring>()</argsstring>
        <name>Wait</name>
        <qualifiedname>xpe::core::cTaskDispatcher::Wait</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="55" column="18" bodyfile="engine/src/core/task_manager.cpp" bodystart="87" bodyend="92"/>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a854d3943678b3a7acba946444716cd3f" compoundref="task__manager_8cpp" startline="77" endline="80">IsBusy</references>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a65dcf432e2c479da29f08ae128cee2b4" compoundref="task__manager_8cpp" startline="94" endline="98">Poll</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classxpe_1_1core_1_1c_task_dispatcher_1a65dcf432e2c479da29f08ae128cee2b4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref></type>
        <definition>void xpe::core::cTaskDispatcher::Poll</definition>
        <argsstring>()</argsstring>
        <name>Poll</name>
        <qualifiedname>xpe::core::cTaskDispatcher::Poll</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="60" column="25" bodyfile="engine/src/core/task_manager.cpp" bodystart="94" bodyend="98"/>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1ab138311f4c5844fc1ffdd9b575c5e057" compoundref="task__manager_8hpp" startline="65">m_WakeCondition</references>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a9c0c18dbf564186d946ca962fea4b898" compoundref="task__manager_8cpp" startline="38" endline="46">Dispatch</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a4811adb9542a927aa10e811016738a03" compoundref="task__manager_8cpp" startline="48" endline="75">Dispatch</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a5b0ee750b601bbefec2f5d142c5704b3" compoundref="task__manager_8cpp" startline="87" endline="92">Wait</referencedby>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_task_dispatcher_1a0ed830ba0ff8290188850e8d323ac592" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref></type>
        <definition>void xpe::core::cTaskDispatcher::InitThread</definition>
        <argsstring>(u32 workerId, const char *name, cThread::ePriority priority)</argsstring>
        <name>InitThread</name>
        <qualifiedname>xpe::core::cTaskDispatcher::InitThread</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc" kindref="member">u32</ref></type>
          <declname>workerId</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">char</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classxpe_1_1core_1_1c_thread_1a714e0fbeefe921f4fbe195de023a4fa1" kindref="member">cThread::ePriority</ref></type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/task_manager.hpp" line="62" column="18" bodyfile="engine/src/core/task_manager.cpp" bodystart="100" bodyend="119"/>
        <references refid="classxpe_1_1core_1_1c_task_dispatcher_1a6b88d57d92d2d9745c3df4d684edea50" compoundref="task__manager_8hpp" startline="64">m_TaskBuffer</references>
        <references refid="classxpe_1_1core_1_1c_thread_1a2c4f38b61459c9d0cf5246ee5ad072de">xpe::core::cThread::SetFormat</references>
        <referencedby refid="classxpe_1_1core_1_1c_task_dispatcher_1a8b31fc506fb0e2f9f8226ef416c895fc" compoundref="task__manager_8cpp" startline="27" endline="36">cTaskDispatcher</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>xpe::core::cObject</label>
        <link refid="classxpe_1_1core_1_1c_object"/>
      </node>
      <node id="3">
        <label>xpe::core::cSimulationDispatcher</label>
        <link refid="classxpe_1_1core_1_1c_simulation_dispatcher"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>xpe::core::cTaskDispatcher</label>
        <link refid="classxpe_1_1core_1_1c_task_dispatcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>xpe::core::cRingBuffer&lt; xpe::core::sTask &gt;</label>
        <link refid="classxpe_1_1core_1_1c_ring_buffer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>xpe::core::cObject</label>
        <link refid="classxpe_1_1core_1_1c_object"/>
      </node>
      <node id="1">
        <label>xpe::core::cTaskDispatcher</label>
        <link refid="classxpe_1_1core_1_1c_task_dispatcher"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_TaskBuffer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="engine/src/core/task_manager.hpp" line="37" column="9" bodyfile="engine/src/core/task_manager.hpp" bodystart="38" bodyend="70"/>
    <listofallmembers>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a8b31fc506fb0e2f9f8226ef416c895fc" prot="public" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>cTaskDispatcher</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a9c0c18dbf564186d946ca962fea4b898" prot="public" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>Dispatch</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a4811adb9542a927aa10e811016738a03" prot="public" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>Dispatch</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a49bf69fb2bde1506378fb05c6c9442a7" prot="public" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>GetWorkerCount</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a0ed830ba0ff8290188850e8d323ac592" prot="protected" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>InitThread</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a854d3943678b3a7acba946444716cd3f" prot="public" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>IsBusy</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a6b88d57d92d2d9745c3df4d684edea50" prot="protected" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>m_TaskBuffer</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a2a1a61cf6c2caea1de30583c0146f7b5" prot="protected" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>m_TasksDone</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a122a3bb1bfa10ac948f995fe3a5c820e" prot="protected" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>m_TasksTodo</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1ab138311f4c5844fc1ffdd9b575c5e057" prot="protected" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>m_WakeCondition</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1aeed8047b981e99e67ae3025006d586e9" prot="protected" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>m_WakeMutex</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a932baf4d6c1c03c8968a8129da4ab6d1" prot="protected" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>m_WorkerCount</name></member>
      <member refid="classxpe_1_1core_1_1c_object_1af52ced913116436c9a1410d942d1911e" prot="public" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>operator delete</name></member>
      <member refid="classxpe_1_1core_1_1c_object_1a94001505b3b68276770a97bc35079194" prot="public" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>operator new</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a65dcf432e2c479da29f08ae128cee2b4" prot="protected" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>Poll</name></member>
      <member refid="classxpe_1_1core_1_1c_task_dispatcher_1a5b0ee750b601bbefec2f5d142c5704b3" prot="public" virt="non-virtual"><scope>xpe::core::cTaskDispatcher</scope><name>Wait</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
