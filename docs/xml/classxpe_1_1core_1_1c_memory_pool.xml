<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classxpe_1_1core_1_1c_memory_pool" kind="class" language="C++" prot="public">
    <compoundname>xpe::core::cMemoryPool</compoundname>
    <includes refid="memory__manager_8hpp" local="no">memory_manager.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_memory_pool_1a8c234a6d1f02bd757dd41b351df5aafe" prot="private" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
        <definition>usize xpe::core::cMemoryPool::m_ByteSize</definition>
        <argsstring></argsstring>
        <name>m_ByteSize</name>
        <qualifiedname>xpe::core::cMemoryPool::m_ByteSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="57" column="23" bodyfile="engine/src/core/memory_manager.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_memory_pool_1ab9a2800ecf19657a6e6db23e31bb092a" prot="private" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref> *</type>
        <definition>void* xpe::core::cMemoryPool::m_Memory</definition>
        <argsstring></argsstring>
        <name>m_Memory</name>
        <qualifiedname>xpe::core::cMemoryPool::m_Memory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="58" column="22" bodyfile="engine/src/core/memory_manager.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_memory_pool_1af1cbf5f0e0646d3234a5d8bc91a39008" prot="private" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref> *</type>
        <definition>void* xpe::core::cMemoryPool::m_LastAddress</definition>
        <argsstring></argsstring>
        <name>m_LastAddress</name>
        <qualifiedname>xpe::core::cMemoryPool::m_LastAddress</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="59" column="22" bodyfile="engine/src/core/memory_manager.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_memory_pool_1a49bd9961cbf71b7b343a2748649d991f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref> *</type>
        <definition>void* xpe::core::cMemoryPool::m_MaxAddress</definition>
        <argsstring></argsstring>
        <name>m_MaxAddress</name>
        <qualifiedname>xpe::core::cMemoryPool::m_MaxAddress</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="60" column="22" bodyfile="engine/src/core/memory_manager.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_memory_pool_1a5ac7cdd8107f4adaae8b17f88ad57f47" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structxpe_1_1core_1_1s_memory_pool_allocation" kindref="compound">sMemoryPoolAllocation</ref> &gt;</type>
        <definition>std::vector&lt;sMemoryPoolAllocation&gt; xpe::core::cMemoryPool::m_Allocs</definition>
        <argsstring></argsstring>
        <name>m_Allocs</name>
        <qualifiedname>xpe::core::cMemoryPool::m_Allocs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="61" column="29" bodyfile="engine/src/core/memory_manager.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_memory_pool_1a70a933d8c75a9cb3068730605bb4d2c9" prot="private" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
        <definition>usize xpe::core::cMemoryPool::m_BytesOccupied</definition>
        <argsstring></argsstring>
        <name>m_BytesOccupied</name>
        <qualifiedname>xpe::core::cMemoryPool::m_BytesOccupied</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="62" column="23" bodyfile="engine/src/core/memory_manager.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_memory_pool_1a6e089e96de1a298fb7e1048eea12e3d0" prot="private" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
        <definition>usize xpe::core::cMemoryPool::m_BytesFreed</definition>
        <argsstring></argsstring>
        <name>m_BytesFreed</name>
        <qualifiedname>xpe::core::cMemoryPool::m_BytesFreed</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="63" column="23" bodyfile="engine/src/core/memory_manager.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_memory_pool_1ac44068be175f1b4edc3beee616d8fcc4" prot="private" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
        <definition>usize xpe::core::cMemoryPool::m_LastFreedBytes</definition>
        <argsstring></argsstring>
        <name>m_LastFreedBytes</name>
        <qualifiedname>xpe::core::cMemoryPool::m_LastFreedBytes</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="64" column="23" bodyfile="engine/src/core/memory_manager.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxpe_1_1core_1_1c_memory_pool_1a1e571a01a7b4633ca76153d5eff9a27c" prot="private" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
        <definition>usize xpe::core::cMemoryPool::m_Alignment</definition>
        <argsstring></argsstring>
        <name>m_Alignment</name>
        <qualifiedname>xpe::core::cMemoryPool::m_Alignment</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="65" column="23" bodyfile="engine/src/core/memory_manager.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classxpe_1_1core_1_1c_memory_pool_1a758ddd40c10e6e5b8bfebd17245dac75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref></type>
        <definition>void xpe::core::cMemoryPool::Init</definition>
        <argsstring>(const usize byteSize, const usize allocs, const usize alignment)</argsstring>
        <name>Init</name>
        <qualifiedname>xpe::core::cMemoryPool::Init</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
          <declname>byteSize</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
          <declname>allocs</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
          <declname>alignment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="30" column="22" bodyfile="engine/src/core/memory_manager.cpp" bodystart="5" bodyend="18"/>
        <referencedby refid="classxpe_1_1core_1_1c_memory_pool_stack_1ae688cd1d27bb1cf64dec6c6824e156aa" compoundref="memory__manager_8cpp" startline="129" endline="154">xpe::core::cMemoryPoolStack::Allocate</referencedby>
        <referencedby refid="classxpe_1_1core_1_1c_memory_pool_stack_1ace90e70bb73ad1ad7cad09b7bd28318d" compoundref="memory__manager_8cpp" startline="102" endline="118">xpe::core::cMemoryPoolStack::cMemoryPoolStack</referencedby>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_memory_pool_1a440d95eb9d3f9e46250182f2927b2a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref></type>
        <definition>void xpe::core::cMemoryPool::Release</definition>
        <argsstring>()</argsstring>
        <name>Release</name>
        <qualifiedname>xpe::core::cMemoryPool::Release</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="31" column="22" bodyfile="engine/src/core/memory_manager.cpp" bodystart="20" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_memory_pool_1a213424d7b68568217760b8717ea90447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref> *</type>
        <definition>void * xpe::core::cMemoryPool::Allocate</definition>
        <argsstring>(const usize size)</argsstring>
        <name>Allocate</name>
        <qualifiedname>xpe::core::cMemoryPool::Allocate</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="33" column="22" bodyfile="engine/src/core/memory_manager.cpp" bodystart="31" bodyend="77"/>
        <references refid="structxpe_1_1core_1_1s_memory_pool_allocation_1ada5e714da298e85d50d1dd857c23cb5d" compoundref="memory__manager_8hpp" startline="19">xpe::core::sMemoryPoolAllocation::FreeFlag</references>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_memory_pool_1ac16a3ff0230764a05b791226c2149a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">bool</ref></type>
        <definition>bool xpe::core::cMemoryPool::Free</definition>
        <argsstring>(void *address)</argsstring>
        <name>Free</name>
        <qualifiedname>xpe::core::cMemoryPool::Free</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref> *</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="34" column="22" bodyfile="engine/src/core/memory_manager.cpp" bodystart="79" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_memory_pool_1a6522f0d3fd6fe0ded6f6f47c423c2cb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
        <definition>usize xpe::core::cMemoryPool::GetAllocCount</definition>
        <argsstring>() const</argsstring>
        <name>GetAllocCount</name>
        <qualifiedname>xpe::core::cMemoryPool::GetAllocCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="36" column="30" bodyfile="engine/src/core/memory_manager.hpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_memory_pool_1a36098361cfd16fb1c5642d6f0195ee7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
        <definition>usize xpe::core::cMemoryPool::GetByteSize</definition>
        <argsstring>() const</argsstring>
        <name>GetByteSize</name>
        <qualifiedname>xpe::core::cMemoryPool::GetByteSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="41" column="30" bodyfile="engine/src/core/memory_manager.hpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_memory_pool_1ab6f6f1a953d48db7aa2b94cc05e1ed2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
        <definition>usize xpe::core::cMemoryPool::GetBytesUsage</definition>
        <argsstring>() const</argsstring>
        <name>GetBytesUsage</name>
        <qualifiedname>xpe::core::cMemoryPool::GetBytesUsage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="46" column="30" bodyfile="engine/src/core/memory_manager.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classxpe_1_1core_1_1c_memory_pool_1a154cc7bfe409e6ee097530288ac6c8b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">usize</ref></type>
        <definition>usize xpe::core::cMemoryPool::GetLastFreedBytes</definition>
        <argsstring>() const</argsstring>
        <name>GetLastFreedBytes</name>
        <qualifiedname>xpe::core::cMemoryPool::GetLastFreedBytes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/memory_manager.hpp" line="51" column="30" bodyfile="engine/src/core/memory_manager.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="engine/src/core/memory_manager.hpp" line="25" column="9" bodyfile="engine/src/core/memory_manager.hpp" bodystart="26" bodyend="66"/>
    <listofallmembers>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a213424d7b68568217760b8717ea90447" prot="public" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>Allocate</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1ac16a3ff0230764a05b791226c2149a73" prot="public" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>Free</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a6522f0d3fd6fe0ded6f6f47c423c2cb1" prot="public" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>GetAllocCount</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a36098361cfd16fb1c5642d6f0195ee7e" prot="public" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>GetByteSize</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1ab6f6f1a953d48db7aa2b94cc05e1ed2c" prot="public" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>GetBytesUsage</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a154cc7bfe409e6ee097530288ac6c8b9" prot="public" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>GetLastFreedBytes</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a758ddd40c10e6e5b8bfebd17245dac75" prot="public" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>Init</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a1e571a01a7b4633ca76153d5eff9a27c" prot="private" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>m_Alignment</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a5ac7cdd8107f4adaae8b17f88ad57f47" prot="private" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>m_Allocs</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a6e089e96de1a298fb7e1048eea12e3d0" prot="private" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>m_BytesFreed</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a8c234a6d1f02bd757dd41b351df5aafe" prot="private" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>m_ByteSize</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a70a933d8c75a9cb3068730605bb4d2c9" prot="private" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>m_BytesOccupied</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1af1cbf5f0e0646d3234a5d8bc91a39008" prot="private" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>m_LastAddress</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1ac44068be175f1b4edc3beee616d8fcc4" prot="private" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>m_LastFreedBytes</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a49bd9961cbf71b7b343a2748649d991f" prot="private" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>m_MaxAddress</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1ab9a2800ecf19657a6e6db23e31bb092a" prot="private" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>m_Memory</name></member>
      <member refid="classxpe_1_1core_1_1c_memory_pool_1a440d95eb9d3f9e46250182f2927b2a2f" prot="public" virt="non-virtual"><scope>xpe::core::cMemoryPool</scope><name>Release</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
