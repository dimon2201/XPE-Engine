<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="structxpe_1_1core_1_1s_event" kind="struct" language="C++" prot="public">
    <compoundname>xpe::core::sEvent</compoundname>
    <includes refid="event_8hpp" local="no">event.hpp</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">typename</ref> <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref></type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structxpe_1_1core_1_1s_event_1a1646f7ca11257e055ed5f6eb11895159" prot="public" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref> *</type>
        <definition>void* xpe::core::sEvent&lt; EventFunction &gt;::This</definition>
        <argsstring></argsstring>
        <name>This</name>
        <qualifiedname>xpe::core::sEvent::This</qualifiedname>
        <initializer>= <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">nullptr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="18" column="18" bodyfile="engine/src/core/event.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpe_1_1core_1_1s_event_1a2e4e949ab8f2f8713e6e50903cebaaf2" prot="public" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref></type>
        <definition>EventFunction xpe::core::sEvent&lt; EventFunction &gt;::Function</definition>
        <argsstring></argsstring>
        <name>Function</name>
        <qualifiedname>xpe::core::sEvent::Function</qualifiedname>
        <initializer>= <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">nullptr</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="19" column="27" bodyfile="engine/src/core/event.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxpe_1_1core_1_1s_event_1af91030e88372c711aac843c8ddc96c62" prot="public" static="no" mutable="no">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">int</ref></type>
        <definition>int xpe::core::sEvent&lt; EventFunction &gt;::Priority</definition>
        <argsstring></argsstring>
        <name>Priority</name>
        <qualifiedname>xpe::core::sEvent::Priority</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="20" column="17" bodyfile="engine/src/core/event.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structxpe_1_1core_1_1s_event_1a2225c66fa1ec0fc12027b4e5f5881797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xpe::core::sEvent&lt; EventFunction &gt;::sEvent</definition>
        <argsstring>()=default</argsstring>
        <name>sEvent</name>
        <qualifiedname>xpe::core::sEvent::sEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="22" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structxpe_1_1core_1_1s_event_1a7e2999da99890203c7db4f8279839234" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>xpe::core::sEvent&lt; EventFunction &gt;::sEvent</definition>
        <argsstring>(EventFunction function, int priority)</argsstring>
        <name>sEvent</name>
        <qualifiedname>xpe::core::sEvent::sEvent</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref></type>
          <declname>function</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">int</ref></type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="24" column="13" bodyfile="engine/src/core/event.hpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="structxpe_1_1core_1_1s_event_1ae554848032f298cecc8d966c5f964d43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>xpe::core::sEvent&lt; EventFunction &gt;::sEvent</definition>
        <argsstring>(void *const _this, EventFunction function, int priority)</argsstring>
        <name>sEvent</name>
        <qualifiedname>xpe::core::sEvent::sEvent</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref> *<ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref></type>
          <declname>_this</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref></type>
          <declname>function</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">int</ref></type>
          <declname>priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="27" column="13" bodyfile="engine/src/core/event.hpp" bodystart="27" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="structxpe_1_1core_1_1s_event_1aa5baaeac1d9afa832f072ef4ea15767f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">bool</ref></type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const sEvent&lt; EventFunction &gt; &amp;e1, const sEvent&lt; EventFunction &gt; &amp;e2)</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>xpe::core::sEvent::operator&lt;</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_event" kindref="compound">sEvent</ref>&lt; <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref> &gt; &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_event" kindref="compound">sEvent</ref>&lt; <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref> &gt; &amp;</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="30" column="27" bodyfile="engine/src/core/event.hpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="friend" id="structxpe_1_1core_1_1s_event_1ab8fed02147c42bcbe42fa8126cfd918b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">bool</ref></type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const sEvent&lt; EventFunction &gt; &amp;e1, const sEvent&lt; EventFunction &gt; &amp;e2)</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>xpe::core::sEvent::operator&gt;</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_event" kindref="compound">sEvent</ref>&lt; <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref> &gt; &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_event" kindref="compound">sEvent</ref>&lt; <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref> &gt; &amp;</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="35" column="32" bodyfile="engine/src/core/event.hpp" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="friend" id="structxpe_1_1core_1_1s_event_1a104aaa98819de71933f1080d7f098595" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">bool</ref></type>
        <definition>bool operator==</definition>
        <argsstring>(const sEvent&lt; EventFunction &gt; &amp;e1, const sEvent&lt; EventFunction &gt; &amp;e2)</argsstring>
        <name>operator==</name>
        <qualifiedname>xpe::core::sEvent::operator==</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_event" kindref="compound">sEvent</ref>&lt; <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref> &gt; &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_event" kindref="compound">sEvent</ref>&lt; <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref> &gt; &amp;</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="40" column="32" bodyfile="engine/src/core/event.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="friend" id="structxpe_1_1core_1_1s_event_1a96f075ec957dcb622f681d8039da8080" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">bool</ref></type>
        <definition>bool operator!=</definition>
        <argsstring>(const sEvent&lt; EventFunction &gt; &amp;e1, const sEvent&lt; EventFunction &gt; &amp;e2)</argsstring>
        <name>operator!=</name>
        <qualifiedname>xpe::core::sEvent::operator!=</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_event" kindref="compound">sEvent</ref>&lt; <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref> &gt; &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="structxpe_1_1core_1_1s_event" kindref="compound">sEvent</ref>&lt; <ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">EventFunction</ref> &gt; &amp;</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/core/event.hpp" line="45" column="32" bodyfile="engine/src/core/event.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="engine/src/core/event.hpp" line="15" column="9" bodyfile="engine/src/core/event.hpp" bodystart="16" bodyend="50"/>
    <listofallmembers>
      <member refid="structxpe_1_1core_1_1s_event_1a2e4e949ab8f2f8713e6e50903cebaaf2" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>Function</name></member>
      <member refid="structxpe_1_1core_1_1s_event_1a96f075ec957dcb622f681d8039da8080" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>operator!=</name></member>
      <member refid="structxpe_1_1core_1_1s_event_1aa5baaeac1d9afa832f072ef4ea15767f" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>operator&lt;</name></member>
      <member refid="structxpe_1_1core_1_1s_event_1a104aaa98819de71933f1080d7f098595" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>operator==</name></member>
      <member refid="structxpe_1_1core_1_1s_event_1ab8fed02147c42bcbe42fa8126cfd918b" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>operator&gt;</name></member>
      <member refid="structxpe_1_1core_1_1s_event_1af91030e88372c711aac843c8ddc96c62" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>Priority</name></member>
      <member refid="structxpe_1_1core_1_1s_event_1a2225c66fa1ec0fc12027b4e5f5881797" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>sEvent</name></member>
      <member refid="structxpe_1_1core_1_1s_event_1a7e2999da99890203c7db4f8279839234" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>sEvent</name></member>
      <member refid="structxpe_1_1core_1_1s_event_1ae554848032f298cecc8d966c5f964d43" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>sEvent</name></member>
      <member refid="structxpe_1_1core_1_1s_event_1a1646f7ca11257e055ed5f6eb11895159" prot="public" virt="non-virtual"><scope>xpe::core::sEvent</scope><name>This</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
