<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="namespacexpe_1_1math" kind="namespace" language="C++">
    <compoundname>xpe::math</compoundname>
    <innerclass refid="classxpe_1_1math_1_1c_math_manager" prot="public">xpe::math::cMathManager</innerclass>
    <innerclass refid="structxpe_1_1math_1_1s_model_matrix" prot="public">xpe::math::sModelMatrix</innerclass>
    <innerclass refid="structxpe_1_1math_1_1s_ray" prot="public">xpe::math::sRay</innerclass>
    <innerclass refid="structxpe_1_1math_1_1s_transform" prot="public">xpe::math::sTransform</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacexpe_1_1math_1a9b91d360a2a3dc49a3d5f1199bdf7037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">void</ref></type>
        <definition>void xpe::math::clamp</definition>
        <argsstring>(T &amp;value, const T min, const T max)</argsstring>
        <name>clamp</name>
        <qualifiedname>xpe::math::clamp</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b" kindref="member">T</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b" kindref="member">T</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b" kindref="member">T</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/math/math.hpp" line="8" column="14" bodyfile="engine/src/math/math.hpp" bodystart="8" bodyend="16"/>
        <references refid="namespacexpe_1_1math_1a874b4329b074d5747abead18d6e273fe" compoundref="math_8hpp" startline="25" endline="28">max</references>
        <references refid="namespacexpe_1_1math_1a775d2b1b17133befae2d3e4570a1f62a" compoundref="math_8hpp" startline="19" endline="22">min</references>
      </memberdef>
      <memberdef kind="function" id="namespacexpe_1_1math_1a775d2b1b17133befae2d3e4570a1f62a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b" kindref="member">T</ref></type>
        <definition>T xpe::math::min</definition>
        <argsstring>(const T &amp;right, const T &amp;left)</argsstring>
        <name>min</name>
        <qualifiedname>xpe::math::min</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b" kindref="member">T</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b" kindref="member">T</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/math/math.hpp" line="19" column="11" bodyfile="engine/src/math/math.hpp" bodystart="19" bodyend="22"/>
        <referencedby refid="namespacexpe_1_1math_1a9b91d360a2a3dc49a3d5f1199bdf7037" compoundref="math_8hpp" startline="8" endline="16">clamp</referencedby>
        <referencedby refid="classxpe_1_1render_1_1c_camera_1a98bea1639b40d11d667454189ec3df06" compoundref="camera_8cpp" startline="8" endline="21">xpe::render::cCamera::GetPanSpeed</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacexpe_1_1math_1a874b4329b074d5747abead18d6e273fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b" kindref="member">T</ref></type>
        <definition>T xpe::math::max</definition>
        <argsstring>(const T &amp;right, const T &amp;left)</argsstring>
        <name>max</name>
        <qualifiedname>xpe::math::max</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b" kindref="member">T</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">const</ref> <ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b" kindref="member">T</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/math/math.hpp" line="25" column="11" bodyfile="engine/src/math/math.hpp" bodystart="25" bodyend="28"/>
        <referencedby refid="namespacexpe_1_1math_1a9b91d360a2a3dc49a3d5f1199bdf7037" compoundref="math_8hpp" startline="8" endline="16">clamp</referencedby>
        <referencedby refid="classxpe_1_1render_1_1c_camera_1a8968d5dc16af5c4d22c0dad61069b88a" compoundref="camera_8cpp" startline="23" endline="28">xpe::render::cCamera::GetZoomSpeed</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacexpe_1_1math_1aac02ad64d4e89e0dc7089b884ba631a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xpe::math::JSON</definition>
        <argsstring>(sModelMatrix, Position, Rotation, Scale) struct ENGINE_API sViewMatrix</argsstring>
        <name>JSON</name>
        <qualifiedname>xpe::math::JSON</qualifiedname>
        <param>
          <type><ref refid="structxpe_1_1math_1_1s_model_matrix" kindref="compound">sModelMatrix</ref></type>
        </param>
        <param>
          <type>Position</type>
        </param>
        <param>
          <type>Rotation</type>
        </param>
        <param>
          <type>Scale</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/math/matrices.hpp" line="14" column="9" bodyfile="engine/src/math/matrices.hpp" bodystart="14" bodyend="26"/>
        <references refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a7624dd9549d662e8a5ce24b7c5155dbd" compoundref="codes__keyboard_8hpp" startline="83">xpe::core::Up</references>
      </memberdef>
      <memberdef kind="function" id="namespacexpe_1_1math_1a1a2ce8e134b89e865c1b5d903113129e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xpe::math::JSON</definition>
        <argsstring>(sViewMatrix, Position, Front, Up) struct ENGINE_API sOrthoMatrix</argsstring>
        <name>JSON</name>
        <qualifiedname>xpe::math::JSON</qualifiedname>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">sViewMatrix</ref></type>
        </param>
        <param>
          <type>Position</type>
        </param>
        <param>
          <type>Front</type>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a7624dd9549d662e8a5ce24b7c5155dbd" kindref="member">Up</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/math/matrices.hpp" line="28" column="9" bodyfile="engine/src/math/matrices.hpp" bodystart="28" bodyend="43"/>
        <references refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a6e36d935ef09f3b1505f7e5ae139c91e" compoundref="codes__keyboard_8hpp" startline="81">xpe::core::Left</references>
        <references refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a7f4d601e14ef73841afa47a3d9f6aa13" compoundref="codes__keyboard_8hpp" startline="80">xpe::core::Right</references>
      </memberdef>
      <memberdef kind="function" id="namespacexpe_1_1math_1ad598b02ad44bbb24718c80baba9d88f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xpe::math::JSON</definition>
        <argsstring>(sOrthoMatrix, Left, Right, Bottom, Top, Near, Far) struct ENGINE_API sPerspectiveMatrix</argsstring>
        <name>JSON</name>
        <qualifiedname>xpe::math::JSON</qualifiedname>
        <param>
          <type>sOrthoMatrix</type>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a6e36d935ef09f3b1505f7e5ae139c91e" kindref="member">Left</ref></type>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a7f4d601e14ef73841afa47a3d9f6aa13" kindref="member">Right</ref></type>
        </param>
        <param>
          <type><ref refid="namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde" kindref="member">Bottom</ref></type>
        </param>
        <param>
          <type>Top</type>
        </param>
        <param>
          <type>Near</type>
        </param>
        <param>
          <type>Far</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/math/matrices.hpp" line="45" column="9" bodyfile="engine/src/math/matrices.hpp" bodystart="45" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="engine/src/math/math.hpp" line="5" column="5"/>
  </compounddef>
</doxygen>
