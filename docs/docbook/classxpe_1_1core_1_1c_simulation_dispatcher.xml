<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classxpe_1_1core_1_1c_simulation_dispatcher" xml:lang="en-US">
<title>xpe::core::cSimulationDispatcher Class Reference</title>
<indexterm><primary>xpe::core::cSimulationDispatcher</primary></indexterm>
<para>
<computeroutput>#include &lt;task_manager.hpp&gt;</computeroutput>
</para>
<para>Inheritance diagram for xpe::core::cSimulationDispatcher:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classxpe_1_1core_1_1c_simulation_dispatcher.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classxpe_1_1core_1_1c_simulation_dispatcher_1a03402af9a4692af19df4f4cf1fb06f69">cSimulationDispatcher</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">workerSize</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">taskBufferSize</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> *<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">name</link>, <link linkend="_classxpe_1_1core_1_1c_thread_1a714e0fbeefe921f4fbe195de023a4fa1">cThread::ePriority</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">priority</link>)</para>
</listitem>
            <listitem><para><link linkend="_classxpe_1_1core_1_1c_simulation_dispatcher_1a493289526bd21e68c177c08468d555f4">~cSimulationDispatcher</link> () <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">override</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_simulation_dispatcher_1a5325d7dece59cf7a08b8dbef17764317">submitTask</link> (physx::PxBaseTask &amp;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">task</link>) <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">override</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">uint32_t</link> <link linkend="_classxpe_1_1core_1_1c_simulation_dispatcher_1a6e43096a7f0c9dbaad09a67ee017328a">getWorkerCount</link> () <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">override</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link></para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classxpe_1_1core_1_1c_task_dispatcher">xpe::core::cTaskDispatcher</link>        <itemizedlist>
            <listitem><para><link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a8b31fc506fb0e2f9f8226ef416c895fc">cTaskDispatcher</link> (<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">workerSize</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">taskBufferSize</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> *<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">name</link>, <link linkend="_classxpe_1_1core_1_1c_thread_1a714e0fbeefe921f4fbe195de023a4fa1">cThread::ePriority</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">priority</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a9c0c18dbf564186d946ca962fea4b898">Dispatch</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_structxpe_1_1core_1_1s_task">sTask</link> &amp;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">task</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a4811adb9542a927aa10e811016738a03">Dispatch</link> (<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">tasksPerThread</link>, <link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">taskSize</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_structxpe_1_1core_1_1s_task">sTask</link> &amp;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">task</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">bool</link> <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a854d3943678b3a7acba946444716cd3f">IsBusy</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a49bf69fb2bde1506378fb05c6c9442a7">GetWorkerCount</link> () <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a5b0ee750b601bbefec2f5d142c5704b3">Wait</link> ()</para>
</listitem>
        </itemizedlist>
Public Member Functions inherited from <link linkend="_classxpe_1_1core_1_1c_object">xpe::core::cObject</link>        <itemizedlist>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> * <link linkend="_classxpe_1_1core_1_1c_object_1a94001505b3b68276770a97bc35079194">operator new</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">byteSize</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_object_1af52ced913116436c9a1410d942d1911e">operator delete</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> *<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">address</link>)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Additional Inherited Members    </title>
Protected Member Functions inherited from <link linkend="_classxpe_1_1core_1_1c_task_dispatcher">xpe::core::cTaskDispatcher</link>        <itemizedlist>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a65dcf432e2c479da29f08ae128cee2b4">Poll</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a0ed830ba0ff8290188850e8d323ac592">InitThread</link> (<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">workerId</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> *<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">name</link>, <link linkend="_classxpe_1_1core_1_1c_thread_1a714e0fbeefe921f4fbe195de023a4fa1">cThread::ePriority</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">priority</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
Protected Attributes inherited from <link linkend="_classxpe_1_1core_1_1c_task_dispatcher">xpe::core::cTaskDispatcher</link>        <itemizedlist>
            <listitem><para><link linkend="_classxpe_1_1core_1_1c_ring_buffer">cRingBuffer</link>&lt; <link linkend="_structxpe_1_1core_1_1s_task">sTask</link> &gt; <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a6b88d57d92d2d9745c3df4d684edea50">m_TaskBuffer</link></para>
</listitem>
            <listitem><para>std::condition_variable <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1ab138311f4c5844fc1ffdd9b575c5e057">m_WakeCondition</link></para>
</listitem>
            <listitem><para>std::mutex <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1aeed8047b981e99e67ae3025006d586e9">m_WakeMutex</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a5339d437e076788ee8b8217188685ee6">u64</link> <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a122a3bb1bfa10ac948f995fe3a5c820e">m_TasksTodo</link></para>
</listitem>
            <listitem><para>std::atomic&lt; <link linkend="_namespacexpe_1_1core_1a5339d437e076788ee8b8217188685ee6">u64</link> &gt; <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a2a1a61cf6c2caea1de30583c0146f7b5">m_TasksDone</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> <link linkend="_classxpe_1_1core_1_1c_task_dispatcher_1a932baf4d6c1c03c8968a8129da4ab6d1">m_WorkerCount</link></para>
</listitem>
        </itemizedlist>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classxpe_1_1core_1_1c_simulation_dispatcher_1a03402af9a4692af19df4f4cf1fb06f69"/><section>
    <title>cSimulationDispatcher()</title>
<indexterm><primary>cSimulationDispatcher</primary><secondary>xpe::core::cSimulationDispatcher</secondary></indexterm>
<indexterm><primary>xpe::core::cSimulationDispatcher</primary><secondary>cSimulationDispatcher</secondary></indexterm>
<para><computeroutput>xpe::core::cSimulationDispatcher::cSimulationDispatcher (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> workerSize, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> taskBufferSize, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> * name, <link linkend="_classxpe_1_1core_1_1c_thread_1a714e0fbeefe921f4fbe195de023a4fa1">cThread::ePriority</link> priority)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_simulation_dispatcher_1a493289526bd21e68c177c08468d555f4"/><section>
    <title>~cSimulationDispatcher()</title>
<indexterm><primary>~cSimulationDispatcher</primary><secondary>xpe::core::cSimulationDispatcher</secondary></indexterm>
<indexterm><primary>xpe::core::cSimulationDispatcher</primary><secondary>~cSimulationDispatcher</secondary></indexterm>
<para><computeroutput>xpe::core::cSimulationDispatcher::~cSimulationDispatcher ( )<computeroutput>[override]</computeroutput>, <computeroutput>[default]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classxpe_1_1core_1_1c_simulation_dispatcher_1a6e43096a7f0c9dbaad09a67ee017328a"/><section>
    <title>getWorkerCount()</title>
<indexterm><primary>getWorkerCount</primary><secondary>xpe::core::cSimulationDispatcher</secondary></indexterm>
<indexterm><primary>xpe::core::cSimulationDispatcher</primary><secondary>getWorkerCount</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">uint32_t</link> xpe::core::cSimulationDispatcher::getWorkerCount ( ) const<computeroutput>[final]</computeroutput>, <computeroutput>[override]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_simulation_dispatcher_1a5325d7dece59cf7a08b8dbef17764317"/><section>
    <title>submitTask()</title>
<indexterm><primary>submitTask</primary><secondary>xpe::core::cSimulationDispatcher</secondary></indexterm>
<indexterm><primary>xpe::core::cSimulationDispatcher</primary><secondary>submitTask</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> xpe::core::cSimulationDispatcher::submitTask (physx::PxBaseTask &amp; task)<computeroutput>[final]</computeroutput>, <computeroutput>[override]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
engine/src/core/<link linkend="_task__manager_8hpp">task_manager.hpp</link>engine/src/core/<link linkend="_task__manager_8cpp">task_manager.cpp</link></section>
</section>
