<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_log__manager_8hpp_source" xml:lang="en-US">
<title>log_manager.hpp</title>
<indexterm><primary>engine/src/core/log_manager.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;spdlog/spdlog.h&gt;</emphasis>
4 <emphasis role="preprocessor">#include&#32;&lt;spdlog/sinks/basic_file_sink.h&gt;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&lt;spdlog/sinks/stdout_color_sinks.h&gt;</emphasis>
6 <emphasis role="preprocessor">#include&#32;&lt;spdlog/async.h&gt;</emphasis>
7 
8 <emphasis role="preprocessor">#ifdef&#32;DEBUG</emphasis>
9 
10 <emphasis role="preprocessor">#define&#32;InitLogger(desc)&#32;xpe::core::cLogManager::Init(desc)</emphasis>
11 <emphasis role="preprocessor">#define&#32;FreeLogger()&#32;xpe::core::cLogManager::Free()</emphasis>
12 
13 <emphasis role="preprocessor">#define&#32;LogTrace(...)&#32;SPDLOG_LOGGER_TRACE(xpe::core::cLogManager::GetTracer(),&#32;__VA_ARGS__)</emphasis>
14 <emphasis role="preprocessor">#define&#32;LogVerbose(...)&#32;SPDLOG_LOGGER_TRACE(xpe::core::cLogManager::GetLogger(),&#32;__VA_ARGS__)</emphasis>
15 <emphasis role="preprocessor">#define&#32;LogInfo(...)&#32;SPDLOG_LOGGER_INFO(xpe::core::cLogManager::GetLogger(),&#32;__VA_ARGS__)</emphasis>
16 <emphasis role="preprocessor">#define&#32;LogWarning(...)&#32;SPDLOG_LOGGER_WARN(xpe::core::cLogManager::GetLogger(),&#32;__VA_ARGS__)</emphasis>
17 <emphasis role="preprocessor">#define&#32;LogError(...)&#32;SPDLOG_LOGGER_ERROR(xpe::core::cLogManager::GetTracer(),&#32;__VA_ARGS__)</emphasis>
18 <emphasis role="preprocessor">#define&#32;LogMemory(...)&#32;SPDLOG_LOGGER_INFO(xpe::core::cLogManager::GetMemLogger(),&#32;__VA_ARGS__)</emphasis>
19 
20 <emphasis role="preprocessor">#define&#32;DumpTraceError(...)&#32;\</emphasis>
21 <emphasis role="preprocessor">LogError(__VA_ARGS__);&#32;\</emphasis>
22 <emphasis role="preprocessor">cLogManager::DumpBacktrace()</emphasis>
23 
24 <emphasis role="preprocessor">#define&#32;LogGLM(name,&#32;v)&#32;\</emphasis>
25 <emphasis role="preprocessor">LogInfo(&quot;{}:&#32;{}&quot;,&#32;name,&#32;glm::to_string(v))</emphasis>
26 
27 <emphasis role="preprocessor">#else</emphasis>
28 
29 <emphasis role="preprocessor">#define&#32;InitLogger(desc)</emphasis>
30 <emphasis role="preprocessor">#define&#32;FreeLogger()</emphasis>
31 
32 <emphasis role="preprocessor">#define&#32;LogTrace(...)</emphasis>
33 <emphasis role="preprocessor">#define&#32;LogVerbose(...)</emphasis>
34 <emphasis role="preprocessor">#define&#32;LogInfo(...)</emphasis>
35 <emphasis role="preprocessor">#define&#32;LogWarning(...)</emphasis>
36 <emphasis role="preprocessor">#define&#32;LogError(...)</emphasis>
37 <emphasis role="preprocessor">#define&#32;LogMemory(...)</emphasis>
38 
39 <emphasis role="preprocessor">#define&#32;DumpTraceError(...)</emphasis>
40 
41 <emphasis role="preprocessor">#define&#32;LogTime(time)</emphasis>
42 
43 <emphasis role="preprocessor">#define&#32;LogGLM(name,&#32;v)</emphasis>
44 
45 <emphasis role="preprocessor">#endif</emphasis>
46 
47 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacexpe">xpe</link>&#32;{
48 
49 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>core&#32;{
50 
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1core_1_1s_logger_descriptor">sLoggerDescriptor</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>&#32;{
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_structxpe_1_1core_1_1s_logger_descriptor_1afc1b0ee6bfda7d6bba679494db09bb7a">Name</link>;
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structxpe_1_1core_1_1s_logger_descriptor_1a3d1231919631a03374ed306d4449ac6b">Backtrace</link>;
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
55 
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_classxpe_1_1core_1_1c_log_manager">cLogManager</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>&#32;{
57 
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Init(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structxpe_1_1core_1_1s_logger_descriptor">sLoggerDescriptor</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">descriptor</link>);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Free();
61 
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;spdlog::logger*&#32;GetLogger();
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;spdlog::logger*&#32;GetTracer();
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;spdlog::logger*&#32;GetMemLogger();
65 
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;DumpBacktrace();
67 
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
69 
70 &#32;&#32;&#32;&#32;}
71 
72 }
</programlisting></section>
