<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_hardware__manager_8hpp_source" xml:lang="en-US">
<title>hardware_manager.hpp</title>
<indexterm><primary>engine/src/core/hardware_manager.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacexpe">xpe</link>&#32;{
4 
5 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>core&#32;{
6 
7 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1core_1_1s_memory_stats">sMemoryStats</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
8 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;TotalPhysical&#32;=&#32;0;
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;AvailablePhysical&#32;=&#32;0;
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;TotalPageFile&#32;=&#32;0;
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;AvailablePageFile&#32;=&#32;0;
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;TotalVirtual&#32;=&#32;0;
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;AvailableVirtual&#32;=&#32;0;
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;AvailableVirtualExtended&#32;=&#32;0;
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
17 
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats">sGpuStats</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats_1a04bb8408fdad1e093683eae2053848e4">MaxTexture2dArray</link>;
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats_1a27aeff7eef78343e29745b1dd217e00f">MaxAnisotropyLevel</link>;
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats_1a1fbe71af53831c4b4981f753acc63452">MaxRenderTargetsPerStage</link>;
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats_1a38e0fc0f9ffd93262798bd6021b8a5d6">IsConcurrentCreatesSupported</link>;
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats_1aba1dd7aa3b91675fbb7c8acac14b9875">IsCommandListSupported</link>;
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats_1af50ad45f9a3d684bc059fba31268021a">MaxThreadGroupsPerDimension</link>;
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats_1afbe10a656c5503e7bee21650795bdd1d">MaxThreadsPerGroup</link>;
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::ivec3&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats_1a6ec4a8ef455d8fdfb3514e0afa696e82">MaxThreadGroup</link>;
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats_1a8dfe4eafc6df0b061554a24d6797c4a4">MaxUnorderedAccessViews</link>;
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
30 
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1core_1_1s_cpu_stats">sCpuStats</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;Cores&#32;=&#32;1;
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;Threads&#32;=&#32;1;
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
36 
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_classxpe_1_1core_1_1c_hardware_manager">cHardwareManager</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>&#32;{
38 
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structxpe_1_1core_1_1s_memory_stats">sMemoryStats</link>&#32;<link linkend="_classxpe_1_1core_1_1c_hardware_manager_1ab313ef35e5e9a83bed08fb81a53667f2">Memory</link>;
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structxpe_1_1core_1_1s_cpu_stats">sCpuStats</link>&#32;<link linkend="_classxpe_1_1core_1_1c_hardware_manager_1a862c8f425b7c7fb53f5598f68247fef2">CPU</link>;
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structxpe_1_1core_1_1s_gpu_stats">sGpuStats</link>&#32;<link linkend="_classxpe_1_1core_1_1c_hardware_manager_1ab988f1bc59fb9c997208683d9a2d1df8">GPU</link>;
43 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_hardware_manager_1ace365cf2d81ec1edcd8798aa43e94fa9">UpdateMemoryStats</link>();
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_hardware_manager_1a28e6013e329654423e5793bab22507f5">UpdateCpuStats</link>();
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_hardware_manager_1a26135be8d001753cbfb9622f93a12c9f">UpdateGpuStats</link>(<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">device</link>);
47 
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
49 
50 &#32;&#32;&#32;&#32;}
51 
52 }
</programlisting></section>
