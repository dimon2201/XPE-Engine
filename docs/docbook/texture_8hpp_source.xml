<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_texture_8hpp_source" xml:lang="en-US">
<title>texture.hpp</title>
<indexterm><primary>engine/src/rendering/core/texture.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="_rendering_2core_2core_8hpp">rendering/core/core.hpp</link>&gt;</emphasis>
4 
5 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacexpe">xpe</link>&#32;{
6 
7 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>render&#32;{
8 
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>core;
10 
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2">eTextureFormat</link>
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2acfff813d86d447fa2a9c858650ebbb90">R8</link>,&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a9a486e1a3c543c7c58e1cc8086dc4239">R16</link>,&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a1b5c31a494189e0415d5623f8b92a419">R32</link>,&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a5b48989c0201198bda57a0024e2e2bd9">R32_TYPELESS</link>,
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a0367a93b9e3e7aa2fbe9802d80298e46">RG8</link>,&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a2b66caa416f0a28686ade3fc30ab223a">RG16</link>,&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2aa8725115efc714421823b7397f9c130c">RG32</link>,
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a165c6379d01617e12de274a3952efa63">RGB8</link>,&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a1cd42e2af35bdfb43d791f8cecdce4a4">RGB16</link>,&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2ace70a5db6685e6d210c3f905a8fa7d4c">RGB32</link>,
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2ab4b279046a02077466fa26cabb00c642">RGBA8</link>,&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a50989efe15b375dce8ba3a5714fe2543">RGBA16</link>,&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2ad9e8e4a9228ed56eceb29f0a1223b02b">RGBA32</link>,
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2aad2ecedf63a30a8f4201f44431d3e2f3">SRGBA8</link>,
18 
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa255cadb2be4fc02d14cee6e1da73ac9a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</link>&#32;=&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2ab4b279046a02077466fa26cabb00c642">RGBA8</link>,
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a6cad826248cd3f4e93da71e7b49928e3">HDR</link>&#32;=&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2ad9e8e4a9228ed56eceb29f0a1223b02b">RGBA32</link>
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
22 
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_mip">sMip</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2">eTextureFormat</link>&#32;<link linkend="_structxpe_1_1render_1_1s_mip_1ac6be9af417f448fada12fcee732d6e7c">Format</link>;
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;Width,&#32;Height&#32;=&#32;0;
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;Pixels&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
28 
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_mip_1a97805a0a538f2725c88a00fbbae9b932">sMip</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
30 
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_mip_1acad0bc6ba93397b5076137fb782c9fa7">sMip</link>(<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2">eTextureFormat</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">format</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">pixels</link>)
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;Format(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">format</link>),&#32;Width(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>),&#32;Height(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>),&#32;Pixels(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">pixels</link>)&#32;{}
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
34 
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer">sTextureLayer</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2">eTextureFormat</link>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer_1ad9b16fd95aac03c29f271dce9d953312">Format</link>;
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;Width,&#32;Height&#32;=&#32;0;
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;Pixels&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sMip&gt;</link>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer_1afbdbd822b1a0a084c3876451d8b3922f">Mips</link>;
41 
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer_1ac3d739257fc08d099a972e182390dde1">sTextureLayer</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
43 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer_1a693eac44108e02aaa674aac7dccda669">sTextureLayer</link>(<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2">eTextureFormat</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">format</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">pixels</link>)
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;Format(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">format</link>),&#32;Width(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>),&#32;Height(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>),&#32;Pixels(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">pixels</link>)&#32;{}
46 
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Free();
48 
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CopyFrom(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer">sTextureLayer</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">other</link>);
50 
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">nodiscard</link>]]&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer">sTextureLayer</link>&#32;Clone()&#32;<emphasis role="keyword">const</emphasis>;
52 
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;GenerateMips(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2">eTextureFormat</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">format</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
54 
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;GenerateMipsU8(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
56 
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;GenerateMipsFloat(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
58 
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FreeMips();
60 
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Resize(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2">eTextureFormat</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">format</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
62 
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ResizeU8(<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
64 
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ResizeFloat(<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;ResizePixelsU8(
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">inputPixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">inputWidth</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">inputHeight</link>,
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">outputWidth</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">outputHeight</link>
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
71 
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;ResizePixelsFloat(
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">inputPixels</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">inputWidth</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">inputHeight</link>,
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">outputWidth</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">outputHeight</link>
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
77 
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1ac86b8e5ecdfbdf8d0635cd13d790cc5f">eFileFormat</link>
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1ac86b8e5ecdfbdf8d0635cd13d790cc5fa55505ba281b015ec31f03ccb151b2a34">PNG</link>,
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1ac86b8e5ecdfbdf8d0635cd13d790cc5fa92769fe7c40229f4301d6125e0a9e928">JPG</link>,
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1ac86b8e5ecdfbdf8d0635cd13d790cc5fa64efd9bcf7b83f22fe9796967255e103">TGA</link>,
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2a6cad826248cd3f4e93da71e7b49928e3">HDR</link>,
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1ac86b8e5ecdfbdf8d0635cd13d790cc5faa5d5ca1447586e23dc011f8c0cc0a6db">BMP</link>
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_texture">sTexture</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_resource">sResource</link>
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
89 
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a495c63bd3a4c8fa449a25a168f7909c7">eType</link>
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TEXTURE_1D,
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TEXTURE_2D,
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TEXTURE_2D_MS,
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TEXTURE_2D_DEPTH_STENCIL,
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TEXTURE_2D_ARRAY,
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TEXTURE_3D,
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TEXTURE_CUBE,
99 
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TEXTURE_DEFAULT&#32;=&#32;TEXTURE_2D
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
102 
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a38f5cc01d9dbc0bbd30463c0563daa2b">eUsage</link>
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa255cadb2be4fc02d14cee6e1da73ac9a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</link>,
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STATIC,
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DYNAMIC,
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STAGING,
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
110 
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;channels&#32;count&#32;table&#32;for&#32;each&#32;texture&#32;format</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::unordered_map&lt;eTextureFormat,&#32;int&gt;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1adc0d03a68a09e08cd032cad442af672c">k_ChannelTable</link>;
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;bytes&#32;per&#32;pixel&#32;table&#32;for&#32;each&#32;texture&#32;format</emphasis>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;std::unordered_map&lt;eTextureFormat,&#32;int&gt;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a29bf78a80d911f38c36e371e4a75828e">k_BppTable</link>;
115 
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a495c63bd3a4c8fa449a25a168f7909c7">eType</link>&#32;Type&#32;=&#32;eType::TEXTURE_DEFAULT;
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a38f5cc01d9dbc0bbd30463c0563daa2b">eUsage</link>&#32;Usage&#32;=&#32;eUsage::DEFAULT;
118 
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a6c8207cb90ffe2906a9409638386c6dd">Width</link>;
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a30ea6eae15dadddb4f65afae1a4106e6">Height</link>;
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;Depth&#32;=&#32;1;
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>;
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a46d0dfa0f134db6b834ccc2b921e2da2">eTextureFormat</link>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1abb723fd3f4ee9573148bf11fd9491985">Format</link>;
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;SampleCount&#32;=&#32;1;
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;EnableRenderTarget&#32;=&#32;<emphasis role="keyword">false</emphasis>;
127 
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;Slot&#32;=&#32;0;
129 
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;MostDetailedMip&#32;=&#32;0;
131 
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;InitializeData&#32;=&#32;<emphasis role="keyword">true</emphasis>;
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sTextureLayer&gt;</link>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a269fc30698e07b48a71b4ee0b5ea2e19">Layers</link>;
134 
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture">sTexture</link>();
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture">~sTexture</link>();
137 
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Init();
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Free();
140 
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer">sTextureLayer</link>&#32;CreateLayer()&#32;<emphasis role="keyword">const</emphasis>;
142 
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;RemoveLayerAt(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>);
144 
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">nodiscard</link>]]&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;GetMipLevels()&#32;<emphasis role="keyword">const</emphasis>;
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;GetMipsLevels(<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>);
147 
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;WindowFrameResized(<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
149 
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Resize(<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
151 
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ResizePixels(<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
153 
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Flip();
155 
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;GenerateMips();
157 
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FlushLayer(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>);
159 
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Flush();
161 
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetResizable(<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">resizable</link>);
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">nodiscard</link>]]&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1ad6d30c28e7b20bfdfb29b099a371def3">IsResizable</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_Resizable;&#32;}
164 
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ResizeTextureU8(<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ResizeTextureFloat(<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">width</link>,&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">height</link>);
168 
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;m_Resizable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
171 
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_atlas">sAtlas</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_texture">sTexture</link>
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_cell">sCell</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;LayerIndex&#32;=&#32;0;
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2&#32;Position&#32;=&#32;{&#32;0,&#32;0&#32;};
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2&#32;Size&#32;=&#32;{&#32;0,&#32;0&#32;};
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer">sTextureLayer</link>*&#32;Texture&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
180 
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_cell_1a4aeca40fc96b5cc0e6eacaa133e2ba5a">sCell</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
182 
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_cell_1a12473e4c0c2b6ef1c48421b5b8a31439">sCell</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasIndex</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;glm::vec2&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">position</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;glm::vec2&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer">sTextureLayer</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">texture</link>)
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;LayerIndex(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasIndex</link>),&#32;Position(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">position</link>),&#32;Size(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>),&#32;Texture(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">texture</link>)&#32;{}
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
186 
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_location">sLocation</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;LayerIndex&#32;=&#32;0;
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2&#32;UV[4]&#32;=&#32;{
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2(0),
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2(0),
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2(0),
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2(0)
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
197 
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddLayer();
199 
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&gt;
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sLocation&#32;AddCell(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&amp;&amp;...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>);
202 
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&gt;
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;RemoveCell(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&amp;&amp;...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>);
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
206 
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&gt;
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_location">sAtlas::sLocation</link>&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1aadddcc49677815c6ff7169e7cb8b9f5a">sAtlas::AddCell</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&#32;&amp;&amp;...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>)
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_cell">sCell</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_cell">sCell</link>(std::forward&lt;Args&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>)...);
211 
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.LayerIndex&#32;&gt;=&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a269fc30698e07b48a71b4ee0b5ea2e19">Layers</link>.size())&#32;{
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_log__manager_8hpp_1a2c6c3e9c356e14fb4a7139acf4fa7b18">LogWarning</link>(<emphasis role="stringliteral">&quot;Atlas&#32;with&#32;index={}&#32;is&#32;not&#32;initialized.&#32;Initialize&#32;atlasLayer&#32;before&#32;adding&#32;this&#32;cell!&quot;</emphasis>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.LayerIndex);
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{};
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
216 
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Texture&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>&#32;||&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Texture-&gt;Pixels&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_log__manager_8hpp_1a2c6c3e9c356e14fb4a7139acf4fa7b18">LogWarning</link>(<emphasis role="stringliteral">&quot;Cell&#32;texture&#32;or&#32;texture&#32;pixels&#32;are&#32;not&#32;initialized.&#32;Initialize&#32;cell&#32;texture&#32;before&#32;adding&#32;this&#32;cell!&quot;</emphasis>);
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;{};
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
221 
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer">sTextureLayer</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a269fc30698e07b48a71b4ee0b5ea2e19">Layers</link>[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.LayerIndex];
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer">sTextureLayer</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellTexture</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Texture-&gt;<link linkend="_structxpe_1_1render_1_1s_texture_layer_1a569be24358e889b9b52802dea3fd4155">Clone</link>();
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellTexture</link>.<link linkend="_structxpe_1_1render_1_1s_texture_layer_1a312528dbd92ffb2a012cc45b08b0c48d">Resize</link>(<link linkend="_structxpe_1_1render_1_1s_texture_1abb723fd3f4ee9573148bf11fd9491985">Format</link>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Size.x,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Size.y);
225 
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellX</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Position.x;
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellY</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Position.y;
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellWidth</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Size.x;
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellHeight</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Size.y;
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasPixels</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Pixels);
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellPixels</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellTexture</link>.Pixels);
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1adc0d03a68a09e08cd032cad442af672c">k_ChannelTable</link>.at(<link linkend="_structxpe_1_1render_1_1s_texture_1abb723fd3f4ee9573148bf11fd9491985">Format</link>);
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">bpc</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a29bf78a80d911f38c36e371e4a75828e">k_BppTable</link>.at(<link linkend="_structxpe_1_1render_1_1s_texture_1abb723fd3f4ee9573148bf11fd9491985">Format</link>)&#32;/&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>;&#32;<emphasis role="comment">//&#32;bytes&#32;per&#32;channel</emphasis>
234 
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">y</link>&#32;=&#32;0;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">y</link>&#32;&lt;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellHeight</link>;&#32;++<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">y</link>)&#32;{
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a49526f1e6a80726936b0b54c8ac10411">x</link>&#32;=&#32;0;&#32;<link linkend="_namespacexpe_1_1core_1a49526f1e6a80726936b0b54c8ac10411">x</link>&#32;&lt;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellWidth</link>;&#32;++<link linkend="_namespacexpe_1_1core_1a49526f1e6a80726936b0b54c8ac10411">x</link>)&#32;{
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellId</link>&#32;=&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">y</link>&#32;*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellWidth</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a49526f1e6a80726936b0b54c8ac10411">x</link>)&#32;*&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>;
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasX</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a49526f1e6a80726936b0b54c8ac10411">x</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellX</link>;
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasY</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">y</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellY</link>;
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasId</link>&#32;=&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasY</link>&#32;*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Width&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasX</link>)&#32;*&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>;
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">c</link>&#32;=&#32;0;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">c</link>&#32;&lt;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>;&#32;++<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">c</link>)&#32;{
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasPixels</link>[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasId</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">c</link>&#32;*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">bpc</link>]&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellPixels</link>[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellId</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">c</link>&#32;*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">bpc</link>];
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
246 
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellTexture</link>.Free();
248 
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_location">sLocation</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">location</link>;
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">location</link>.<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_location_1acd2f198d37bc2a5e945aee4a01152aee">LayerIndex</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.LayerIndex;
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">location</link>.UV[0]&#32;=&#32;glm::fvec2(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellX</link>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellY</link>)&#32;/&#32;glm::fvec2(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Width,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Height);
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">location</link>.UV[1]&#32;=&#32;glm::fvec2(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellX</link>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellY</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellHeight</link>)&#32;/&#32;glm::fvec2(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Width,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Height);
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">location</link>.UV[2]&#32;=&#32;glm::fvec2(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellX</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellWidth</link>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellY</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellHeight</link>)&#32;/&#32;glm::fvec2(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Width,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Height);
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">location</link>.UV[3]&#32;=&#32;glm::fvec2(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellX</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellWidth</link>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellY</link>)&#32;/&#32;glm::fvec2(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Width,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Height);
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">location</link>;
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
257 
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&gt;
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1ae86c89d26a46de2c298c647bd7f3ca8b">sAtlas::RemoveCell</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&#32;&amp;&amp;...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>)
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_cell">sCell</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_atlas_1_1s_cell">sCell</link>(std::forward&lt;Args&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>)...);
262 
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.LayerIndex&#32;&gt;=&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a269fc30698e07b48a71b4ee0b5ea2e19">Layers</link>.size())&#32;{
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_log__manager_8hpp_1a2c6c3e9c356e14fb4a7139acf4fa7b18">LogWarning</link>(<emphasis role="stringliteral">&quot;Atlas&#32;with&#32;index={}&#32;is&#32;not&#32;initialized.&#32;Initialize&#32;atlasLayer&#32;before&#32;adding&#32;this&#32;cell!&quot;</emphasis>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.LayerIndex);
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
267 
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_layer">sTextureLayer</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a269fc30698e07b48a71b4ee0b5ea2e19">Layers</link>[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.LayerIndex];
269 
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellX</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Position.x;
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellY</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Position.y;
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellWidth</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Size.x;
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1accef6bf85b3c0f0eb539eb2a4f1c6109">s32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellHeight</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cell</link>.Size.y;
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasPixels</link>&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>*<emphasis role="keyword">&gt;</emphasis>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Pixels);
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1adc0d03a68a09e08cd032cad442af672c">k_ChannelTable</link>.at(<link linkend="_structxpe_1_1render_1_1s_texture_1abb723fd3f4ee9573148bf11fd9491985">Format</link>);
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">bpc</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a29bf78a80d911f38c36e371e4a75828e">k_BppTable</link>.at(<link linkend="_structxpe_1_1render_1_1s_texture_1abb723fd3f4ee9573148bf11fd9491985">Format</link>)&#32;/&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>;&#32;<emphasis role="comment">//&#32;bytes&#32;per&#32;channel</emphasis>
277 
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">y</link>&#32;=&#32;0;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">y</link>&#32;&lt;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellHeight</link>;&#32;++<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">y</link>)&#32;{
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a49526f1e6a80726936b0b54c8ac10411">x</link>&#32;=&#32;0;&#32;<link linkend="_namespacexpe_1_1core_1a49526f1e6a80726936b0b54c8ac10411">x</link>&#32;&lt;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellWidth</link>;&#32;++<link linkend="_namespacexpe_1_1core_1a49526f1e6a80726936b0b54c8ac10411">x</link>)&#32;{
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasX</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a49526f1e6a80726936b0b54c8ac10411">x</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellX</link>;
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasY</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">y</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cellY</link>;
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasId</link>&#32;=&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasY</link>&#32;*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasLayer</link>.Width&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasX</link>)&#32;*&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>;
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">c</link>&#32;=&#32;0;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">c</link>&#32;&lt;&#32;<link linkend="_structxpe_1_1render_1_1s_texture_1a10628a7ab9042a9df51147bf76b38c81">Channels</link>;&#32;++<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">c</link>)&#32;{
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasPixels</link>[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">atlasId</link>&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">c</link>&#32;*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">bpc</link>]&#32;=&#32;0;
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
289 
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_sampler">sSampler</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_resource">sResource</link>
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_sampler_1ae7484a0042c11b348127faeccae46ef2">eComparison</link>
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a443475558f0168dff92ecde26b98ae5a">NEVER</link>,
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a1798e8c3621ca53d9e3a80d257306000">LESS</link>,
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a969f331a87d8c958473c32b4d0e61a44">EQUAL</link>,
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a8b4a5cd69b217bf93b054ada7f49abd4">LESS_EQUAL</link>,
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927ae7e72355289e404b762d4cf88824d23b">GREATER</link>,
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a4ea2d378cdec20f59330f113297bc1ce">NOT_EQUAL</link>,
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a87e6b203bf40967d37a33f9a4438561a">GREATER_EQUAL</link>,
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927af3fc827ade4b968e50406496907ef962">ALWAYS</link>
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
303 
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_sampler_1ab0e8e2699d503fbfea12d7150c685f4d">eAddress</link>
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WRAP,
307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MIRROR,
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CLAMP,
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BORDER,
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MIRROR_ONCE
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
312 
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_sampler_1a9a8d696e711426896c0a151ba1f5f625">eFilter</link>
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MIN_MAG_MIP_POINT,
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MIN_MAG_MIP_LINEAR,
317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ANISOTROPIC
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
319 
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;Slot&#32;=&#32;0;
321 
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_sampler_1a9a8d696e711426896c0a151ba1f5f625">eFilter</link>&#32;Filter&#32;=&#32;eFilter::MIN_MAG_MIP_POINT;
323 
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;MinLOD&#32;=&#32;0;
325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;MaxLOD&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">FLT_MAX</link>;
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;MipLODBias&#32;=&#32;0;
327 
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;AnisotropyLevel&#32;=&#32;1;
329 
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec4&#32;BorderColor&#32;=&#32;{&#32;0,&#32;0,&#32;0,&#32;0&#32;};
331 
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_sampler_1ae7484a0042c11b348127faeccae46ef2">eComparison</link>&#32;Comparison&#32;=&#32;eComparison::NEVER;
333 
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_sampler_1ab0e8e2699d503fbfea12d7150c685f4d">eAddress</link>&#32;AddressU&#32;=&#32;eAddress::CLAMP;
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_sampler_1ab0e8e2699d503fbfea12d7150c685f4d">eAddress</link>&#32;AddressV&#32;=&#32;eAddress::CLAMP;
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_sampler_1ab0e8e2699d503fbfea12d7150c685f4d">eAddress</link>&#32;AddressW&#32;=&#32;eAddress::CLAMP;
337 
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_sampler">sSampler</link>();
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_sampler">~sSampler</link>();
340 
341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Init();
342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
343 
344 &#32;&#32;&#32;&#32;}
345 
346 }
</programlisting></section>
