<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stl_8hpp" xml:lang="en-US">
<title>engine/src/stl/stl.hpp File Reference</title>
<indexterm><primary>engine/src/stl/stl.hpp</primary></indexterm>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespacexpe">xpe</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespacexpe_1_1core">xpe::core</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typedef</link> std::basic_string&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link>, std::char_traits&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> &gt;, <link linkend="_classxpe_1_1core_1_1c_main_allocator">cMainAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> &gt; &gt; <link linkend="_namespacexpe_1_1core_1a78ed6bb66afe2b4a776d73948fc8637c">xpe::core::string</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typedef</link> std::basic_string&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link>, std::char_traits&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> &gt;, <link linkend="_classxpe_1_1core_1_1c_hot_allocator">cHotAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> &gt; &gt; <link linkend="_namespacexpe_1_1core_1acef017c0ff17c5aee0985b3aea112a90">xpe::core::hstring</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typedef</link> std::basic_stringstream&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link>, std::char_traits&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> &gt;, <link linkend="_classxpe_1_1core_1_1c_main_allocator">cMainAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> &gt; &gt; <link linkend="_namespacexpe_1_1core_1a74c6d12f646e004c7b55a543ae9e8a37">xpe::core::stringstream</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typedef</link> std::basic_stringstream&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link>, std::char_traits&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> &gt;, <link linkend="_classxpe_1_1core_1_1c_hot_allocator">cHotAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> &gt; &gt; <link linkend="_namespacexpe_1_1core_1ad25fb3781440baa5b332afa17ddfa6db">xpe::core::hstringstream</link></para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">xpe::core::vector</link> = std::vector&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>, <link linkend="_classxpe_1_1core_1_1c_main_allocator">cMainAllocator</link>&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>&gt;&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1aa631f1df6bbff91816ab1ca55985ffce">xpe::core::hvector</link> = std::vector&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>, <link linkend="_classxpe_1_1core_1_1c_hot_allocator">cHotAllocator</link>&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>&gt;&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> , <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size_t</link> Size&gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1af1faf38160c359a3107783de1ccd0e0b">xpe::core::array</link> = std::array&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>, Size&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link> , <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1a7f4450b27bad0d3d2e66274aa3f6716d">xpe::core::map</link> = std::map&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link>, std::equal_to&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, <link linkend="_classxpe_1_1core_1_1c_main_allocator">cMainAllocator</link>&lt;std::pair&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link>&gt;&gt;&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link> , <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1ab3f968ad8c468067eb302c62f773e1d9">xpe::core::hmap</link> = std::map&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link>, std::equal_to&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, <link linkend="_classxpe_1_1core_1_1c_hot_allocator">cHotAllocator</link>&lt;std::pair&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link>&gt;&gt;&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link> , <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Comparator</link>  = std::less&lt;K&gt;&gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1a8ac037afa106b7ff21a6eedf7b7e62bb">xpe::core::set</link> = std::set&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Comparator</link>, <link linkend="_classxpe_1_1core_1_1c_main_allocator">cMainAllocator</link>&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link> , <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Comparator</link>  = std::less&lt;K&gt;&gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1a6438ef223e5f8612dd3bd7b85ca46d52">xpe::core::hset</link> = std::set&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Comparator</link>, <link linkend="_classxpe_1_1core_1_1c_hot_allocator">cHotAllocator</link>&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1a407f7eba91bc4f2413b2cd0f154dda91">xpe::core::unordered_set</link> = std::unordered_set&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, std::hash&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, std::equal_to&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, <link linkend="_classxpe_1_1core_1_1c_main_allocator">cMainAllocator</link>&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1a5e5fc45c2a0c317ca0414d3287d523fd">xpe::core::hunordered_set</link> = std::unordered_set&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, std::hash&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, std::equal_to&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, <link linkend="_classxpe_1_1core_1_1c_hot_allocator">cHotAllocator</link>&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link> , <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1affe7ea2db8f29e4d85e6a1da779b90dd">xpe::core::unordered_map</link> = std::unordered_map&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link>, std::hash&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, std::equal_to&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, <link linkend="_classxpe_1_1core_1_1c_main_allocator">cMainAllocator</link>&lt;std::pair&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link>&gt;&gt;&gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link> , <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">using</link> <link linkend="_namespacexpe_1_1core_1a583fdad976e8a1cab53f96ba86055423">xpe::core::hunordered_map</link> = std::unordered_map&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link>, std::hash&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, std::equal_to&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>&gt;, <link linkend="_classxpe_1_1core_1_1c_hot_allocator">cHotAllocator</link>&lt;std::pair&lt;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a82ea43219d7245c6bd500ead32a0dd9a">K</link>, <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8ae1a61df881ca9edeb5c52654701c2081">V</link>&gt;&gt;&gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link> <link linkend="_namespacexpe_1_1core_1a5339d437e076788ee8b8217188685ee6">u64</link> <link linkend="_namespacexpe_1_1core_1a21084dba4baabe2a8da4ee568572f6da">xpe::core::Hash</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a78ed6bb66afe2b4a776d73948fc8637c">string</link> &amp;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">str</link>)</para>
</listitem>
            <listitem><para><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link> <link linkend="_namespacexpe_1_1core_1a5339d437e076788ee8b8217188685ee6">u64</link> <link linkend="_namespacexpe_1_1core_1aecfa7f49583e3abb9929a1f59446b36f">xpe::core::Hash</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1acef017c0ff17c5aee0985b3aea112a90">hstring</link> &amp;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">str</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
