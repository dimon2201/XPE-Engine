<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classxpe_1_1core_1_1c_memory_pool_stack" xml:lang="en-US">
<title>xpe::core::cMemoryPoolStack Class Reference</title>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary></indexterm>
<para>
<computeroutput>#include &lt;memory_manager.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1ace90e70bb73ad1ad7cad09b7bd28318d">cMemoryPoolStack</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> *<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usid</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">poolCount</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">poolByteSize</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">poolAllocs</link>, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">alignment</link>)</para>
</listitem>
            <listitem><para><link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a49aa70c1b4f127c2896937941ad6d450">~cMemoryPoolStack</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a50d3dbf3d026ffcd6c690ec25c9d08cd">GetPoolCount</link> () <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a5d1b81e26af1551030602add69f1492d">GetAllocCount</link> (<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>) <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a288ecd4bd8f2683401de5cf4d7783718">GetPoolSize</link> (<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>) <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> * <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1ae688cd1d27bb1cf64dec6c6824e156aa">Allocate</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1ab2837b4bac91331c423dd3865e569745">Free</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> *<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">address</link>)</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> * <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a0a2b778334b1190ace97d88626a74c6a">AllocateConstruct</link> ()</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> , <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> ... Args&gt; </para><para><link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> * <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1aa6ae78170d3ddcc6d8b0760f61c417a5">AllocateConstructArgs</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link> &amp;&amp;... <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a04cba795278eeeba4c8a5899f30e852f">LogPools</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>std::vector&lt; <link linkend="_classxpe_1_1core_1_1c_memory_pool">cMemoryPool</link> &gt; <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a59e2991d246f8b82eea77534f8adc5dd">Pools</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1ab4cfb434c17711bcafd79ae06764d303">PoolByteSize</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1ad45746f1e29be44c286cba51bf8517f0">PoolAllocs</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a62472a53b8c041af3a25eac21c76cd39">TotalAllocCount</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1afed217042051f97939ef8a2081332d08">TotalFreeCount</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a0511f9b25e79efcf1e1d62aa2c4a1050">TotalBytes</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a9a972787ece7aa6ba62d3aa53a11edde">TotalBytesOccupied</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a1035ff0d9e147d481a58464027402618">TotalBytesFreed</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1a31b6629d0997c83a856c50dd1cb09331">Alignment</link> = 0</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> * <link linkend="_classxpe_1_1core_1_1c_memory_pool_stack_1af1c4fd5a893d87e3054b30de9f63bf8b">USID</link> = <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">nullptr</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1ace90e70bb73ad1ad7cad09b7bd28318d"/><section>
    <title>cMemoryPoolStack()</title>
<indexterm><primary>cMemoryPoolStack</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>cMemoryPoolStack</secondary></indexterm>
<para><computeroutput>xpe::core::cMemoryPoolStack::cMemoryPoolStack (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link> * usid, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> poolCount, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> poolByteSize, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> poolAllocs, <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> alignment)</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a49aa70c1b4f127c2896937941ad6d450"/><section>
    <title>~cMemoryPoolStack()</title>
<indexterm><primary>~cMemoryPoolStack</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>~cMemoryPoolStack</secondary></indexterm>
<para><computeroutput>xpe::core::cMemoryPoolStack::~cMemoryPoolStack ( )</computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1ae688cd1d27bb1cf64dec6c6824e156aa"/><section>
    <title>Allocate()</title>
<indexterm><primary>Allocate</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>Allocate</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> * xpe::core::cMemoryPoolStack::Allocate (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> size)</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a0a2b778334b1190ace97d88626a74c6a"/><section>
    <title>AllocateConstruct()</title>
<indexterm><primary>AllocateConstruct</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>AllocateConstruct</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> * xpe::core::cMemoryPoolStack::AllocateConstruct ( )</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1aa6ae78170d3ddcc6d8b0760f61c417a5"/><section>
    <title>AllocateConstructArgs()</title>
<indexterm><primary>AllocateConstructArgs</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>AllocateConstructArgs</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> , typename... Args&gt; </computeroutput><para><computeroutput><link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> * xpe::core::cMemoryPoolStack::AllocateConstructArgs (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link> &amp;&amp;... args)</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1ab2837b4bac91331c423dd3865e569745"/><section>
    <title>Free()</title>
<indexterm><primary>Free</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>Free</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> xpe::core::cMemoryPoolStack::Free (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> * address)</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a5d1b81e26af1551030602add69f1492d"/><section>
    <title>GetAllocCount()</title>
<indexterm><primary>GetAllocCount</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>GetAllocCount</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::GetAllocCount (<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> index) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a50d3dbf3d026ffcd6c690ec25c9d08cd"/><section>
    <title>GetPoolCount()</title>
<indexterm><primary>GetPoolCount</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>GetPoolCount</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::GetPoolCount ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a288ecd4bd8f2683401de5cf4d7783718"/><section>
    <title>GetPoolSize()</title>
<indexterm><primary>GetPoolSize</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>GetPoolSize</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::GetPoolSize (<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link> index) const<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a04cba795278eeeba4c8a5899f30e852f"/><section>
    <title>LogPools()</title>
<indexterm><primary>LogPools</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>LogPools</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> xpe::core::cMemoryPoolStack::LogPools ( )</computeroutput></para></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a31b6629d0997c83a856c50dd1cb09331"/><section>
    <title>Alignment</title>
<indexterm><primary>Alignment</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>Alignment</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::Alignment = 0</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1ad45746f1e29be44c286cba51bf8517f0"/><section>
    <title>PoolAllocs</title>
<indexterm><primary>PoolAllocs</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>PoolAllocs</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::PoolAllocs = 0</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1ab4cfb434c17711bcafd79ae06764d303"/><section>
    <title>PoolByteSize</title>
<indexterm><primary>PoolByteSize</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>PoolByteSize</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::PoolByteSize = 0</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a59e2991d246f8b82eea77534f8adc5dd"/><section>
    <title>Pools</title>
<indexterm><primary>Pools</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>Pools</secondary></indexterm>
<para><computeroutput>std::vector&lt;<link linkend="_classxpe_1_1core_1_1c_memory_pool">cMemoryPool</link>&gt; xpe::core::cMemoryPoolStack::Pools</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a62472a53b8c041af3a25eac21c76cd39"/><section>
    <title>TotalAllocCount</title>
<indexterm><primary>TotalAllocCount</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>TotalAllocCount</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::TotalAllocCount = 0</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a0511f9b25e79efcf1e1d62aa2c4a1050"/><section>
    <title>TotalBytes</title>
<indexterm><primary>TotalBytes</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>TotalBytes</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::TotalBytes = 0</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a1035ff0d9e147d481a58464027402618"/><section>
    <title>TotalBytesFreed</title>
<indexterm><primary>TotalBytesFreed</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>TotalBytesFreed</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::TotalBytesFreed = 0</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1a9a972787ece7aa6ba62d3aa53a11edde"/><section>
    <title>TotalBytesOccupied</title>
<indexterm><primary>TotalBytesOccupied</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>TotalBytesOccupied</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::TotalBytesOccupied = 0</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1afed217042051f97939ef8a2081332d08"/><section>
    <title>TotalFreeCount</title>
<indexterm><primary>TotalFreeCount</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>TotalFreeCount</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link> xpe::core::cMemoryPoolStack::TotalFreeCount = 0</computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_memory_pool_stack_1af1c4fd5a893d87e3054b30de9f63bf8b"/><section>
    <title>USID</title>
<indexterm><primary>USID</primary><secondary>xpe::core::cMemoryPoolStack</secondary></indexterm>
<indexterm><primary>xpe::core::cMemoryPoolStack</primary><secondary>USID</secondary></indexterm>
<para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">char</link>* xpe::core::cMemoryPoolStack::USID = <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">nullptr</link></computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
engine/src/core/<link linkend="_memory__manager_8hpp">memory_manager.hpp</link>engine/src/core/<link linkend="_memory__manager_8cpp">memory_manager.cpp</link></section>
</section>
