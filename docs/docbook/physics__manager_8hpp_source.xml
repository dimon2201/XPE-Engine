<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_physics__manager_8hpp_source" xml:lang="en-US">
<title>physics_manager.hpp</title>
<indexterm><primary>engine/src/physics/physics_manager.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacephysx">physx</link>
4 {
5 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>PxActor;
6 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>PxRigidDynamic;
7 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>PxShape;
8 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>PxMaterial;
9 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>PxScene;
10 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>PxFoundation;
11 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>PxPhysics;
12 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>PxCpuDispatcher;
13 }
14 
15 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacexpe">xpe</link>&#32;{
16 
17 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>core
18 &#32;&#32;&#32;&#32;{
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">cMainDispatcher</link>;
20 &#32;&#32;&#32;&#32;}
21 
22 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>ecs
23 &#32;&#32;&#32;&#32;{
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>cEntity;
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>cScene;
26 &#32;&#32;&#32;&#32;}
27 
28 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>render
29 &#32;&#32;&#32;&#32;{
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>sMaterial;
31 &#32;&#32;&#32;&#32;}
32 
33 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>math
34 &#32;&#32;&#32;&#32;{
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>sTransform;
36 &#32;&#32;&#32;&#32;}
37 
38 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>physics
39 &#32;&#32;&#32;&#32;{
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespacephysx">physx</link>;
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>core;
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>ecs;
43 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>cPhysicsAllocator;
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>cPhysicsErrorCallback;
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>cPhysicsSimulationEventCallback;
47 
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438e">eShapeType</link>
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">NONE</link>&#32;=&#32;0,
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438ea6f7cea7381e843e2ee0338b4a92b0d43">SPHERE</link>&#32;=&#32;1,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438ea67586f12c9792da11a4bdf60360d40e9">CAPSULE</link>&#32;=&#32;2,
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eae657cce1913c857166b0475f18668ef5">BOX</link>&#32;=&#32;3,
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eaad6990fc23cd957328515fde2db852a3">PLANE</link>&#32;=&#32;4
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
56 
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_json_8hpp_1a85a6dfc31ce6b1db814a5641eee98a59">JSON_ENUM</link>(<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438e">eShapeType</link>,&#32;{
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">eShapeType::NONE</link>,&#32;<emphasis role="stringliteral">&quot;NONE&quot;</emphasis>&#32;},
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438ea6f7cea7381e843e2ee0338b4a92b0d43">eShapeType::SPHERE</link>,&#32;<emphasis role="stringliteral">&quot;SPHERE&quot;</emphasis>&#32;},
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438ea67586f12c9792da11a4bdf60360d40e9">eShapeType::CAPSULE</link>,&#32;<emphasis role="stringliteral">&quot;CAPSULE&quot;</emphasis>&#32;},
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eae657cce1913c857166b0475f18668ef5">eShapeType::BOX</link>,&#32;<emphasis role="stringliteral">&quot;BOX&quot;</emphasis>&#32;},
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eaad6990fc23cd957328515fde2db852a3">eShapeType::PLANE</link>,&#32;<emphasis role="stringliteral">&quot;PLANE&quot;</emphasis>&#32;}
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;})
64 
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;sShapeDescriptor&#32;:&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">public</link>&#32;cObject
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sShapeDescriptor(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438e">eShapeType</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">type</link>)
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Type&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">type</link>;
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
71 
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438e">eShapeType</link>&#32;Type;
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_json_8hpp_1a64a0d7950ac2a45cdc342a649e970f96">JSON</link>(sShapeDescriptor,&#32;Type)
75 
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">struct</link>&#32;<link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_sphere_shape_descriptor">sSphereShapeDescriptor</link>&#32;:&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">public</link>&#32;sShapeDescriptor
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_sphere_shape_descriptor_1a17f9361b0cfab9468c439f0d71beb125">sSphereShapeDescriptor</link>()&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_sphere_shape_descriptor_1a430c8fb21c235d141e847d4e1b66d572">sSphereShapeDescriptor</link>(<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">radius</link>)&#32;:&#32;sShapeDescriptor(<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438e">eShapeType</link>::<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438ea6f7cea7381e843e2ee0338b4a92b0d43">SPHERE</link>),&#32;Radius(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">radius</link>)&#32;{}
80 
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_sphere_shape_descriptor_1a867e5eddcf13838f0a8a1165d9794682">Radius</link>;
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_json_8hpp_1a64a0d7950ac2a45cdc342a649e970f96">JSON</link>(<link linkend="_structxpe_1_1physics_1_1s_sphere_shape_descriptor">sSphereShapeDescriptor</link>,&#32;Type,&#32;Radius)
84 
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">struct</link>&#32;<link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_capsule_shape_descriptor">sCapsuleShapeDescriptor</link>&#32;:&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">public</link>&#32;sShapeDescriptor
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_capsule_shape_descriptor_1a61158ad802b90d0fd6d8fd8337cfc17c">sCapsuleShapeDescriptor</link>()&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_capsule_shape_descriptor_1a835f3869ee5fbf04bfd6d8e7890d2fd7">sCapsuleShapeDescriptor</link>(<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">radius</link>,&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">halfHeight</link>)
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;sShapeDescriptor(<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438e">eShapeType</link>::<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438ea67586f12c9792da11a4bdf60360d40e9">CAPSULE</link>),&#32;Radius(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">radius</link>),&#32;HalfHeight(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">halfHeight</link>)&#32;{}
90 
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_capsule_shape_descriptor_1a8ad1075ad479924eca65379dd2706af3">Radius</link>;
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_capsule_shape_descriptor_1aa7edc05c32c2d0c3d3fd3a705f0b6ba7">HalfHeight</link>;
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_json_8hpp_1a64a0d7950ac2a45cdc342a649e970f96">JSON</link>(<link linkend="_structxpe_1_1physics_1_1s_capsule_shape_descriptor">sCapsuleShapeDescriptor</link>,&#32;Type,&#32;Radius,&#32;HalfHeight)
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">struct</link>&#32;<link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_box_shape_descriptor">sBoxShapeDescriptor</link>&#32;:&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">public</link>&#32;sShapeDescriptor
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_box_shape_descriptor_1a76afcf8b7c0f7a678bc16f7aa2e62d9e">sBoxShapeDescriptor</link>()&#32;=&#32;<emphasis role="keyword">delete</emphasis>;
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_box_shape_descriptor_1a051606b0870fe1954d2c12416774df48">sBoxShapeDescriptor</link>(<emphasis role="keyword">const</emphasis>&#32;glm::vec3&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">halfExtents</link>)
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;sShapeDescriptor(<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438e">eShapeType</link>::<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eae657cce1913c857166b0475f18668ef5">BOX</link>),&#32;HalfExtents(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">halfExtents</link>)&#32;{}
101 
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;<link linkend="_structxpe_1_1physics_1_1s_box_shape_descriptor_1ad4f5759c1e4707e26115e7c8773664e9">HalfExtents</link>;
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_json_8hpp_1a64a0d7950ac2a45cdc342a649e970f96">JSON</link>(<link linkend="_structxpe_1_1physics_1_1s_box_shape_descriptor">sBoxShapeDescriptor</link>,&#32;Type,&#32;HalfExtents)
105 
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">struct</link>&#32;<link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_plane_shape_descriptor">sPlaneShapeDescriptor</link>&#32;:&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">public</link>&#32;sShapeDescriptor
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_plane_shape_descriptor_1a7d1367152f1377925c58e7979b83a415">sPlaneShapeDescriptor</link>()&#32;:&#32;sShapeDescriptor(<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438e">eShapeType</link>::<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eaad6990fc23cd957328515fde2db852a3">PLANE</link>)&#32;{}
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_json_8hpp_1a64a0d7950ac2a45cdc342a649e970f96">JSON</link>(<link linkend="_structxpe_1_1physics_1_1s_plane_shape_descriptor">sPlaneShapeDescriptor</link>,&#32;Type)
111 
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">struct</link>&#32;<link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_actor">sActor</link>
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1physics_1_1s_actor_1a6a5d73ace4ade9f6ed574941af2ccfc5">eActorType</link>
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">NONE</link>&#32;=&#32;0,
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RIGID_STATIC&#32;=&#32;1,
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RIGID_DYNAMIC&#32;=&#32;2
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_actor_1a0d6b26bb92c74fce700ff90d28d9d58b">JSON_ENUM</link>(<link linkend="_structxpe_1_1physics_1_1s_actor_1a6a5d73ace4ade9f6ed574941af2ccfc5">eActorType</link>,&#32;{
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;eActorType::NONE,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;NONE&quot;</emphasis>&#32;},
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;eActorType::RIGID_STATIC,&#32;&#32;<emphasis role="stringliteral">&quot;RIGID_STATIC&quot;</emphasis>&#32;},
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;eActorType::RIGID_DYNAMIC,&#32;<emphasis role="stringliteral">&quot;RIGID_DYNAMIC&quot;</emphasis>&#32;},
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;})
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_actor">sActor</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
127 
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_actor_1af3c72e195b2eb868f37caa615fb1bede">sActor</link>(
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">PxActor</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">actor</link>,
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">PxMaterial</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">material</link>,
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">PxShape</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">shape</link>,
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structxpe_1_1physics_1_1s_actor_1a6a5d73ace4ade9f6ed574941af2ccfc5">eActorType</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">actorType</link>,
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sShapeDescriptor*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">shapeDesc</link>,
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;glm::vec3&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">linearVelocity</link>,
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">staticFriction</link>,
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">dynamicFriction</link>,
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">restitution</link>,
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">contactOffset</link>,
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">restOffset</link>
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;:
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Actor(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">actor</link>),
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Material(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">material</link>),
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Shape(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">shape</link>),
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ActorType(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">actorType</link>),
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ShapeDesc(*<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">shapeDesc</link>),
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LinearVelocity(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">linearVelocity</link>),
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StaticFriction(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">staticFriction</link>),
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DynamicFriction(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">dynamicFriction</link>),
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Restitution(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">restitution</link>),
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ContactOffset(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">contactOffset</link>),
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RestOffset(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">restOffset</link>)
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
154 
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">PxActor</link>*&#32;Actor&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">PxMaterial</link>*&#32;Material&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">PxShape</link>*&#32;Shape&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_actor_1a6a5d73ace4ade9f6ed574941af2ccfc5">eActorType</link>&#32;ActorType&#32;=&#32;eActorType::NONE;
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sShapeDescriptor&#32;ShapeDesc&#32;=&#32;sShapeDescriptor(<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">eShapeType::NONE</link>);
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;LinearVelocity&#32;=&#32;glm::vec3(0.0f);
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;StaticFriction&#32;=&#32;0.0f;
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;DynamicFriction&#32;=&#32;0.0f;
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;Restitution&#32;=&#32;0.0f;
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;ContactOffset&#32;=&#32;0.0f;
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;RestOffset&#32;=&#32;0.0f;
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
167 
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_ragdoll">sRagdoll</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_ragdoll_1aeda9a25ef2fa74f5948681b045346e80">sRagdoll</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sActor*&gt;</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">bodyparts</link>)&#32;:&#32;Bodyparts(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">bodyparts</link>)&#32;{}
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1physics_1_1s_ragdoll_1aa867b794021be6821bd4d44f5f6da88e">~sRagdoll</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
172 
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;k_BodypartCount&#32;=&#32;12;
174 
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_structxpe_1_1physics_1_1s_ragdoll_1afcafb1e0c7980f74ea09073f55b47709">eBodypart</link>
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">NONE</link>&#32;=&#32;0,
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;HEAD&#32;=&#32;1,
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TORSO_TOP&#32;=&#32;2,
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TORSO_MIDDLE&#32;=&#32;3,
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TORSO_BOTTOM&#32;=&#32;4,
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LEFT_ARM_TOP&#32;=&#32;5,
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LEFT_ARM_BOTTOM&#32;=&#32;6,
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RIGHT_ARM_TOP&#32;=&#32;7,
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RIGHT_ARM_BOTTOM&#32;=&#32;8,
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LEFT_LEG_TOP&#32;=&#32;9,
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LEFT_LEG_BOTTOM&#32;=&#32;10,
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RIGHT_LEG_TOP&#32;=&#32;11,
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RIGHT_LEG_BOTTOM&#32;=&#32;12
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
191 
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sActor*&gt;</link>&#32;<link linkend="_structxpe_1_1physics_1_1s_ragdoll_1a3c78e7d1cf49375afb779a32b6f71ad8">Bodyparts</link>;
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
194 
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_classxpe_1_1physics_1_1c_physics_manager">cPhysicsManager</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
197 
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Init(PxCpuDispatcher*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">dispatcher</link>,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">enableMemoryProfiling</link>&#32;=&#32;<emphasis role="keyword">false</emphasis>);
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;Free();
201 
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EnableLoggingInfo(<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">enable</link>);
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EnableLoggingWarning(<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">enable</link>);
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;EnableLoggingError(<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">enable</link>);
205 
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structxpe_1_1physics_1_1s_actor">sActor</link>*&#32;AddActor(
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classxpe_1_1ecs_1_1c_entity">cEntity</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">entity</link>,
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structxpe_1_1physics_1_1s_actor_1a6a5d73ace4ade9f6ed574941af2ccfc5">sActor::eActorType</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">actorType</link>,
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sShapeDescriptor*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">shapeDesc</link>,
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;glm::vec3&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">linearVelocity</link>,
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">staticFriction</link>,
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">dynamicFriction</link>,
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">restitution</link>,
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">contactOffset</link>,
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">restOffset</link>
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_structxpe_1_1physics_1_1s_ragdoll">sRagdoll</link>*&#32;AddRagdoll();
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">PxScene</link>*&#32;AddScene(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">tag</link>);
220 
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetActorPose(<link linkend="_structxpe_1_1physics_1_1s_actor">sActor</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">actor</link>,&#32;<link linkend="_structxpe_1_1math_1_1s_transform">math::sTransform</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">transform</link>);
222 
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_classxpe_1_1physics_1_1c_physics_allocator">cPhysicsAllocator</link>*&#32;s_Allocator;
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_classxpe_1_1physics_1_1c_physics_error_callback">cPhysicsErrorCallback</link>*&#32;s_ErrorCallback;
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_classxpe_1_1physics_1_1c_physics_simulation_event_callback">cPhysicsSimulationEventCallback</link>*&#32;s_EventCallback;
227 
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">PxFoundation</link>*&#32;s_Foundation;
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">PxPhysics</link>*&#32;s_Physics;
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;PxCpuDispatcher*&#32;s_Dispatcher;
231 
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">unordered_map&lt;string, sActor*&gt;</link>*&#32;s_Actors;
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">unordered_map&lt;string, PxScene*&gt;</link>*&#32;s_Scenes;
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
235 
236 &#32;&#32;&#32;&#32;}
237 
238 }
</programlisting></section>
