<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classxpe_1_1core_1_1c_main_allocator" xml:lang="en-US">
<title>xpe::core::cMainAllocator&lt; T &gt; Class Template Reference</title>
<indexterm><primary>xpe::core::cMainAllocator&lt; T &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;allocators.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Types    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typedef</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> <link linkend="_classxpe_1_1core_1_1c_main_allocator_1a855065a97a2bc149b3054b76b66d17ca">value_type</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classxpe_1_1core_1_1c_main_allocator_1aa150d0e4f524c33c8cb2b4d1949897b8">cMainAllocator</link> ()=<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">default</link></para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">class</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8abc4622eb1258ea0912a5a84d861e9997">U</link> &gt; </para><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">constexpr</link> <link linkend="_classxpe_1_1core_1_1c_main_allocator_1a9224359fd1505bf67899bc4f4d6a7959">cMainAllocator</link> (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_classxpe_1_1core_1_1c_main_allocator">cMainAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8abc4622eb1258ea0912a5a84d861e9997">U</link> &gt; &amp;) <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">noexcept</link></para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> * <link linkend="_classxpe_1_1core_1_1c_main_allocator_1afbc9b354b3cbfc82c5993edef67a3539">allocate</link> (std::size_t <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>)</para>
</listitem>
            <listitem><para><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_main_allocator_1a682580bb1b6b9f607dc7cef8114a650c">deallocate</link> (<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> *<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">element</link>, std::size_t <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>) <link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">noexcept</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Member Typedef Documentation</title>
<anchor xml:id="_classxpe_1_1core_1_1c_main_allocator_1a855065a97a2bc149b3054b76b66d17ca"/><section>
    <title>value_type</title>
<indexterm><primary>value_type</primary><secondary>xpe::core::cMainAllocator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>xpe::core::cMainAllocator&lt; T &gt;</primary><secondary>value_type</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typedef</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> <link linkend="_classxpe_1_1core_1_1c_main_allocator">xpe::core::cMainAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt;::value_type</computeroutput></para></section>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classxpe_1_1core_1_1c_main_allocator_1aa150d0e4f524c33c8cb2b4d1949897b8"/><section>
    <title>cMainAllocator()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>cMainAllocator</primary><secondary>xpe::core::cMainAllocator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>xpe::core::cMainAllocator&lt; T &gt;</primary><secondary>cMainAllocator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_classxpe_1_1core_1_1c_main_allocator">xpe::core::cMainAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt;::cMainAllocator ( )<computeroutput>[default]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_main_allocator_1a9224359fd1505bf67899bc4f4d6a7959"/><section>
    <title>cMainAllocator()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>cMainAllocator</primary><secondary>xpe::core::cMainAllocator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>xpe::core::cMainAllocator&lt; T &gt;</primary><secondary>cMainAllocator</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">class</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8abc4622eb1258ea0912a5a84d861e9997">U</link> &gt; </computeroutput><para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">constexpr</link> <link linkend="_classxpe_1_1core_1_1c_main_allocator">xpe::core::cMainAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt;::cMainAllocator (<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">const</link> <link linkend="_classxpe_1_1core_1_1c_main_allocator">cMainAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8abc4622eb1258ea0912a5a84d861e9997">U</link> &gt; &amp; )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classxpe_1_1core_1_1c_main_allocator_1afbc9b354b3cbfc82c5993edef67a3539"/><section>
    <title>allocate()</title>
<indexterm><primary>allocate</primary><secondary>xpe::core::cMainAllocator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>xpe::core::cMainAllocator&lt; T &gt;</primary><secondary>allocate</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> * <link linkend="_classxpe_1_1core_1_1c_main_allocator">xpe::core::cMainAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt;::allocate (std::size_t count)<computeroutput>[inline]</computeroutput></computeroutput></para></section>
<anchor xml:id="_classxpe_1_1core_1_1c_main_allocator_1a682580bb1b6b9f607dc7cef8114a650c"/><section>
    <title>deallocate()</title>
<indexterm><primary>deallocate</primary><secondary>xpe::core::cMainAllocator&lt; T &gt;</secondary></indexterm>
<indexterm><primary>xpe::core::cMainAllocator&lt; T &gt;</primary><secondary>deallocate</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typename</link> <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt; </computeroutput><para><computeroutput><link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">void</link> <link linkend="_classxpe_1_1core_1_1c_main_allocator">xpe::core::cMainAllocator</link>&lt; <link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> &gt;::deallocate (<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link> * element, std::size_t count)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para></section>
<para>
The documentation for this class was generated from the following file:</para>
engine/src/core/<link linkend="_core_2allocators_8hpp">allocators.hpp</link></section>
</section>
