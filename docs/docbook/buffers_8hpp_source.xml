<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_buffers_8hpp_source" xml:lang="en-US">
<title>buffers.hpp</title>
<indexterm><primary>engine/src/rendering/buffers.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;<link linkend="_rendering_2core_2context_8hpp">rendering/core/context.hpp</link>&gt;</emphasis>
4 
5 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacexpe">xpe</link>&#32;{
6 
7 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>render&#32;{
8 
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>core;
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>math;
11 
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_index_buffer">sIndexBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_buffer">sBuffer</link>
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;u32&gt;</link>&#32;<link linkend="_structxpe_1_1render_1_1s_index_buffer_1acc680d703e35e68a97781e80528755d2">List</link>;
15 
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_index_buffer">sIndexBuffer</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">indexCount</link>&#32;=&#32;0,&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">sBuffer::eSubType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>&#32;=&#32;sBuffer::eSubType::NONE,&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">sBuffer::eViewType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>&#32;=&#32;sBuffer::eViewType::NONE);
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_index_buffer">sIndexBuffer</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;u32&gt;</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">indexArray</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">sBuffer::eSubType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>&#32;=&#32;sBuffer::eSubType::NONE,&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">sBuffer::eViewType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>&#32;=&#32;sBuffer::eViewType::NONE);
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_index_buffer">~sIndexBuffer</link>();
19 
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Flush();
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FlushIndices(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;u32&gt;</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">indices</link>);
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FlushIndex(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">i</link>,&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>);
23 
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Resize(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Reserve(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Recreate(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
27 
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;returns&#32;index&#32;offset&#32;of&#32;added&#32;indices</emphasis>
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;AddIndices(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;u32&gt;</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">indices</link>);
30 
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>*&#32;<link linkend="_structxpe_1_1render_1_1s_index_buffer_1aab782234e6ea93c668e129ef1e1aedab">GetIndex</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">i</link>)
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;if&#32;index&#32;is&#32;in&#32;the&#32;size&#32;bounds</emphasis>
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;not,&#32;then&#32;resize&#32;to&#32;index&#32;+&#32;1</emphasis>
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">i</link>&#32;&gt;=&#32;Count())&#32;{
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Resize(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">i</link>&#32;+&#32;1);
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;List[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">i</link>];
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
40 
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_structxpe_1_1render_1_1s_index_buffer_1a2fa678552fe6cef5f75b652a41548b72">Count</link>()&#32;{
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;List.size();
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
44 
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
46 
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_buffer">sVertexBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_buffer">sBuffer</link>
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sVertex&gt;</link>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_buffer_1a22d81b65d5f12550be686e431441ad5e">List</link>;
50 
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_buffer">sVertexBuffer</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vertexCount</link>&#32;=&#32;0,&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">sBuffer::eSubType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>&#32;=&#32;sBuffer::eSubType::NONE,&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">sBuffer::eViewType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>&#32;=&#32;sBuffer::eViewType::NONE);
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_buffer">sVertexBuffer</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sVertex&gt;</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vertices</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">sBuffer::eSubType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>&#32;=&#32;sBuffer::eSubType::NONE,&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">sBuffer::eViewType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>&#32;=&#32;sBuffer::eViewType::NONE);
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_buffer">~sVertexBuffer</link>();
54 
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Flush();
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FlushVertex(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex">sVertex</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>);
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;FlushVertices(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sVertex&gt;</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vertices</link>);
58 
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Resize(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Reserve(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Recreate(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
62 
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Clear();
64 
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;returns&#32;vertex&#32;offset&#32;of&#32;added&#32;vertices</emphasis>
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;AddVertices(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sVertex&gt;</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vertices</link>);
67 
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex">sVertex</link>*&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_buffer_1a9ed5d79b8e6e598d9d2d5e532037ab2f">GetVertex</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>)
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;check&#32;if&#32;index&#32;is&#32;in&#32;the&#32;size&#32;bounds</emphasis>
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;if&#32;not,&#32;then&#32;resize&#32;to&#32;index&#32;+&#32;1</emphasis>
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>&#32;&gt;=&#32;Count())&#32;{
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Resize(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>&#32;+&#32;1);
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;List[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>];
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
77 
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_buffer_1aa1bb53510a4f9a6e53ff21b4c04b73b7">Count</link>()
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;List.size();
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
82 
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
84 
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structxpe_1_1render_1_1s_item_buffer">sItemBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_buffer">sBuffer</link>
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1a3cf0d01b28c943dc5fbfb8d51f9d04e0">Item</link>;
89 
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1a2dc29550f3a412bb684362be20a40c31">sItemBuffer</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1a39db5f0b06af9220020254eafb019243">sItemBuffer</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">slot</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">sBuffer::eSubType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633ab50339a10e1de285ac99d4c3990b8693">sBuffer::eSubType::NONE</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">sBuffer::eViewType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4ab50339a10e1de285ac99d4c3990b8693">sBuffer::eViewType::NONE</link>);
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1ad30731eca43bd810c08678f340b22797">~sItemBuffer</link>();
93 
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1a36748548161b72588ad888d58a2aa163">Flush</link>();
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1a2ec0e0a22ec010a9eaab044ea4559f5f">FlushItem</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>);
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
97 
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1a2dc29550f3a412bb684362be20a40c31">sItemBuffer&lt;T&gt;::sItemBuffer</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">slot</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">sBuffer::eSubType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">sBuffer::eViewType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>)
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Type&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a94462aa429bf7df8a8902f82772672caa2b911c015ed17a423c74ab9987330e60">sBuffer::eType::ITEM</link>;
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ViewType&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>;
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SubType&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Slot&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">slot</link>;
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StructureSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>);
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NumElements&#32;=&#32;1;
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitialData&#32;=&#32;&amp;Item;
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1a55a0590129a19f52e243dc67094efaf5">context::CreateBuffer</link>(*<emphasis role="keyword">this</emphasis>);
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1a43a3526ddcb06eddda247d1457ae02b3">context::CopyBuffer</link>(*<emphasis role="keyword">this</emphasis>,&#32;&amp;Item,&#32;StructureSize);
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
111 
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1ad30731eca43bd810c08678f340b22797">sItemBuffer&lt;T&gt;::~sItemBuffer</link>()
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1aabfe2d29425d231b5bcb38398009e73c">context::FreeBuffer</link>(*<emphasis role="keyword">this</emphasis>);
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
117 
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1a36748548161b72588ad888d58a2aa163">sItemBuffer&lt;T&gt;::Flush</link>()
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1a43a3526ddcb06eddda247d1457ae02b3">context::CopyBuffer</link>(*<emphasis role="keyword">this</emphasis>,&#32;&amp;Item,&#32;StructureSize);
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
123 
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer_1a2ec0e0a22ec010a9eaab044ea4559f5f">sItemBuffer&lt;T&gt;::FlushItem</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>&#32;&amp;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>)
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Item&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>;
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1a43a3526ddcb06eddda247d1457ae02b3">context::CopyBuffer</link>(*<emphasis role="keyword">this</emphasis>,&#32;&amp;Item,&#32;StructureSize);
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
130 
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_buffer">sBuffer</link>
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
134 
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a1373c4c3770a4badfbabfbd32f6d28e4">sListBuffer</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1aefa6236c95b3bfb6bf7faff1b0538d76">sListBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>,&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">slot</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">sBuffer::eSubType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633ab50339a10e1de285ac99d4c3990b8693">sBuffer::eSubType::NONE</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">sBuffer::eViewType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4ab71ecf0b186ac1b938e15483f792b7db">sBuffer::eViewType::SRV</link>);
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1afa72691ff364361e8000923fc3da6089">~sListBuffer</link>();
139 
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1ad9de1835e029836261d585eec95bedd5">Flush</link>();
142 
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1abbb9adba1403faffd5abc203db0ba419">FlushItem</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>);
144 
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a3a082aa393d4ddd287620213150952db">FlushItemAt</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>);
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&gt;
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a915d07581a0582453afaa6057d734476">Add</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&amp;&amp;...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>);
149 
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a8118487ce9bf5871387829bf8b9a6a1a">RemoveAt</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>);
151 
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a05386fd8b9858ceda35f9f17d4de0cc1">Resize</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
153 
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a95eba2b8154bc1c8f9150e632e518161">Reserve</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
155 
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a8255ba8a59c6efe9728f65b6fe37d486">Recreate</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
157 
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1aa314c4a7aca6c0623cd4ac495925eae7">Clear</link>();
159 
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1acbba31b0032b55239b1e910c71cb7bd4">Empty</link>();
161 
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;T&gt;</link>&amp;&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a183aa9a22c658269cc9eeecfe72e06a6">GetList</link>()
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a5f8dfd6829fafa6ef35f66123f4d65be">m_List</link>;
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
166 
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1af1b78e374e912c0f7ea9363d579553c5">Size</link>()<emphasis role="keyword">&#32;const</emphasis>
168 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a5f8dfd6829fafa6ef35f66123f4d65be">m_List</link>.size();
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
171 
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a890c0d3362ed1ddfb7f6415e04c26152">Capacity</link>()<emphasis role="keyword">&#32;const</emphasis>
173 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a5f8dfd6829fafa6ef35f66123f4d65be">m_List</link>.capacity();
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
176 
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>*&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a5da7fa83fc5fd64d05df00b870bb78d9">Get</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>)
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>&#32;&gt;=&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a5f8dfd6829fafa6ef35f66123f4d65be">m_List</link>.size())
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_log__manager_8hpp_1a611dbbfa5c2f148b7190b97a12835b5e">LogError</link>(<emphasis role="stringliteral">&quot;Index&#32;{}&#32;is&#32;out&#32;of&#32;bounds&#32;of&#32;size&#32;{}&quot;</emphasis>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>,&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a5f8dfd6829fafa6ef35f66123f4d65be">m_List</link>.size());
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">nullptr</emphasis>;
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a5f8dfd6829fafa6ef35f66123f4d65be">m_List</link>[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>];
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
186 
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>*&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1aba6ef6b63567204b44769096f2ddbf10">operator []</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>)
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a5da7fa83fc5fd64d05df00b870bb78d9">Get</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>);
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
191 
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;T&gt;</link>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a5f8dfd6829fafa6ef35f66123f4d65be">m_List</link>;
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
195 
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a1373c4c3770a4badfbabfbd32f6d28e4">sListBuffer&lt;T&gt;::sListBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>,&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">slot</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">sBuffer::eSubType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>,&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">sBuffer::eViewType</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>)
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Type&#32;=&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a94462aa429bf7df8a8902f82772672caa298cb25408234de02baf2085803a464a">sBuffer::eType::LIST</link>;
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SubType&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">subtype</link>;
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ViewType&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">viewtype</link>;
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Slot&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">slot</link>;
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;StructureSize&#32;=&#32;<emphasis role="keyword">sizeof</emphasis>(<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>);
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NumElements&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>;
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitialData&#32;=&#32;m_List.data();
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>&#32;&gt;&#32;0)
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_List.resize(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1a55a0590129a19f52e243dc67094efaf5">context::CreateBuffer</link>(*<emphasis role="keyword">this</emphasis>);
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1a43a3526ddcb06eddda247d1457ae02b3">context::CopyBuffer</link>(*<emphasis role="keyword">this</emphasis>,&#32;m_List.data(),&#32;GetByteSize());
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
213 
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1afa72691ff364361e8000923fc3da6089">sListBuffer&lt;T&gt;::~sListBuffer</link>()
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1aabfe2d29425d231b5bcb38398009e73c">context::FreeBuffer</link>(*<emphasis role="keyword">this</emphasis>);
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_List.clear();
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
220 
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1ad9de1835e029836261d585eec95bedd5">sListBuffer&lt;T&gt;::Flush</link>()
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>&#32;=&#32;m_List.size();
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>&#32;!=&#32;NumElements)&#32;{
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Recreate(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>);
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1a43a3526ddcb06eddda247d1457ae02b3">context::CopyBuffer</link>(*<emphasis role="keyword">this</emphasis>,&#32;m_List.data(),&#32;GetByteSize());
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
232 
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1abbb9adba1403faffd5abc203db0ba419">sListBuffer&lt;T&gt;::FlushItem</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">newItem</link>)
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>&#32;=&#32;operator[](<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>);
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">newItem</link>;
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1ac4e51ec5113ccbd8df2127707e684e88">context::CopyBufferOffset</link>(*<emphasis role="keyword">this</emphasis>,&#32;StructureSize&#32;*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>,&#32;StructureSize);
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
243 
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a3a082aa393d4ddd287620213150952db">sListBuffer&lt;T&gt;::FlushItemAt</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>)
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8af3764cd9d20fc009f54427329b8d297b">T</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>&#32;=&#32;operator[](<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>);
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1ac4e51ec5113ccbd8df2127707e684e88">context::CopyBufferOffset</link>(*<emphasis role="keyword">this</emphasis>,&#32;StructureSize&#32;*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>,&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">item</link>,&#32;StructureSize);
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
253 
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a8255ba8a59c6efe9728f65b6fe37d486">sListBuffer&lt;T&gt;::Recreate</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>)
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_List.resize(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NumElements&#32;=&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>;
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;InitialData&#32;=&#32;m_List.data();
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1aabfe2d29425d231b5bcb38398009e73c">context::FreeBuffer</link>(*<emphasis role="keyword">this</emphasis>);
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1a55a0590129a19f52e243dc67094efaf5">context::CreateBuffer</link>(*<emphasis role="keyword">this</emphasis>);
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1_1context_1a43a3526ddcb06eddda247d1457ae02b3">context::CopyBuffer</link>(*<emphasis role="keyword">this</emphasis>,&#32;m_List.data(),&#32;GetByteSize());
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
264 
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a05386fd8b9858ceda35f9f17d4de0cc1">sListBuffer&lt;T&gt;::Resize</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>)
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_List.resize(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
270 
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a95eba2b8154bc1c8f9150e632e518161">sListBuffer&lt;T&gt;::Reserve</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>)
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_List.reserve(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>);
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
276 
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1aa314c4a7aca6c0623cd4ac495925eae7">sListBuffer&lt;T&gt;::Clear</link>()
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_List.clear();
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
282 
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1acbba31b0032b55239b1e910c71cb7bd4">sListBuffer&lt;T&gt;::Empty</link>()
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_List.empty();
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
288 
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&gt;
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a915d07581a0582453afaa6057d734476">sListBuffer&lt;T&gt;::Add</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">Args</link>&#32;&amp;&amp;...&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>)
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_List.emplace_back(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">args</link>...);
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_List.size()&#32;-&#32;1;
295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
296 
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer_1a8118487ce9bf5871387829bf8b9a6a1a">sListBuffer&lt;T&gt;::RemoveAt</link>(<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>)
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_List.erase(m_List.begin()&#32;+&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">index</link>);
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
302 
303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_camera_data">sCameraData</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;<link linkend="_structxpe_1_1render_1_1s_camera_data_1a6545a53760842893edeae2a6d35df7e9">Position</link>;
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_pad0&#32;=&#32;0;
307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_camera_data_1a5aac4ac1e531d6962e12165f74d4c6fe">View</link>;
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_camera_data_1a191d0f1815561855dcf294c8ce3cbe7d">Projection</link>;
309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_viewport">sViewport</link>&#32;<link linkend="_structxpe_1_1render_1_1s_camera_data_1a17efea803d511e108323cdb9b372a342">Viewport</link>;
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Exposure&#32;=&#32;1.0f;
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Gamma&#32;=&#32;2.2f;
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
313 
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_camera_buffer">sCameraBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer">sItemBuffer</link>&lt;sCameraData&gt;
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_camera_buffer_1a3bc4f48a70fb46518a98517c12a90b84">sCameraBuffer</link>()&#32;:&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer">sItemBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_camera_data">sCameraData</link>&gt;(<link linkend="_macro__constants_8hpp_1a5e65ccfc4325ebb3b4ecb123b2aee29c">K_SLOT_CAMERA</link>)&#32;{}
317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
318 
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_render_instance">sRenderInstance</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_render_instance_1a0d8886811a8973612892f4964e2eef33">ModelMatrix</link>;&#32;&#32;<emphasis role="comment">//&#32;position&#32;world&#32;space</emphasis>
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_render_instance_1a82090da33f3b202675c7aa554483a6c4">NormalMatrix</link>;&#32;<emphasis role="comment">//&#32;normal&#32;world&#32;space</emphasis>
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;MaterialIndex&#32;=&#32;0;
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;SkeletonIndex&#32;=&#32;0;
325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;LightIndex&#32;&#32;&#32;&#32;=&#32;0;
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
327 
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_instance_buffer">sInstanceBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;sRenderInstance&gt;
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_instance_buffer_1aa59b4610a16801f1d1714a9afdc53ea9">sInstanceBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>&#32;=&#32;0)&#32;:&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_render_instance">sRenderInstance</link>&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>,&#32;<link linkend="_macro__constants_8hpp_1a7aa9c09536f63465cce816ada9c6198d">K_SLOT_INSTANCES</link>)&#32;{}
331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
332 
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_direct_light_data">sDirectLightData</link>
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Position&#32;=&#32;{&#32;0,&#32;0,&#32;0&#32;};
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Color&#32;=&#32;{&#32;1,&#32;1,&#32;1&#32;};
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_direct_light_data_1a064e58c291ad7f6c3565bedc8c9fce42">ViewProjection</link>;
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
339 
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_direct_light_buffer">sDirectLightBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;sDirectLightData&gt;
341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_direct_light_buffer_1a6dae54e78a5f3b81cd7a75a08d1f8082">sDirectLightBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>&#32;=&#32;0)&#32;:&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_direct_light_data">sDirectLightData</link>&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>,&#32;<link linkend="_macro__constants_8hpp_1af5e23be2d64a830eacc2b7104d50cd93">K_SLOT_DIRECT_LIGHTS</link>)&#32;{}
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
344 
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_point_light_data">sPointLightData</link>
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Position&#32;=&#32;{&#32;0,&#32;0,&#32;0&#32;};
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Color&#32;=&#32;{&#32;1,&#32;1,&#32;1&#32;};
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Constant&#32;=&#32;1.0f;
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Linear&#32;=&#32;0.09f;
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Quadratic&#32;=&#32;0.032f;
352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_point_light_data_1ac58e949215596c5ecd596e4461a534b1">ViewProjection</link>;
353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
354 
355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_point_light_buffer">sPointLightBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;sPointLightData&gt;
356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_point_light_buffer_1a8cff359989bbc435f29abcf6cd2d92d6">sPointLightBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>&#32;=&#32;0)&#32;:&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_point_light_data">sPointLightData</link>&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>,&#32;<link linkend="_macro__constants_8hpp_1ae63f50f316d512217ef6f57a69bbe058">K_SLOT_POINT_LIGHTS</link>)&#32;{}
358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
359 
360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_spot_light_data">sSpotLightData</link>
361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Position&#32;=&#32;{&#32;0,&#32;0,&#32;0&#32;};
363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Direction&#32;=&#32;{&#32;1,&#32;1,&#32;1&#32;};
364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Color&#32;=&#32;{&#32;1,&#32;1,&#32;1&#32;};
365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Cutoff&#32;=&#32;1;
366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Outer&#32;=&#32;1;
367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_spot_light_data_1a0ef30dcd81d5fab13739447a1b2ad7a7">ViewProjection</link>;
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Near&#32;=&#32;0;
369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Far&#32;=&#32;1;
370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
371 
372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_spot_light_buffer">sSpotLightBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;sSpotLightData&gt;
373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_spot_light_buffer_1a4f36a1dbda66b808d777b7c8a92e0150">sSpotLightBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>&#32;=&#32;0)&#32;:&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_spot_light_data">sSpotLightData</link>&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>,&#32;<link linkend="_macro__constants_8hpp_1a5163ca2f051525fe5dd1eb3702eb3bc2">K_SLOT_SPOT_LIGHTS</link>)&#32;{}
375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
376 
377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_material_data">sMaterialData</link>
378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;albedo&#32;mapping</emphasis>
380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec4&#32;Albedo&#32;=&#32;{&#32;0.5,&#32;0.5,&#32;0.5,&#32;1.0&#32;};
381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a3f9cec2c7902c056f501af31ee6e4692">Boolean</link>&#32;EnableAlbedoMap&#32;=&#32;<emphasis role="keyword">false</emphasis>;
382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;normal&#32;mapping</emphasis>
383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a3f9cec2c7902c056f501af31ee6e4692">Boolean</link>&#32;EnableNormalMap&#32;=&#32;<emphasis role="keyword">false</emphasis>;
384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;parallax&#32;occlusion&#32;mapping</emphasis>
385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a3f9cec2c7902c056f501af31ee6e4692">Boolean</link>&#32;EnableParallaxMap&#32;=&#32;<emphasis role="keyword">false</emphasis>;
386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ParallaxHeightScale&#32;=&#32;0.1;
387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ParallaxMinLayers&#32;=&#32;8;
388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;ParallaxMaxLayers&#32;=&#32;32;
389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;metal&#32;mapping</emphasis>
390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Metallness&#32;=&#32;0.5f;
391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a3f9cec2c7902c056f501af31ee6e4692">Boolean</link>&#32;EnableMetalMap&#32;=&#32;<emphasis role="keyword">false</emphasis>;
392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;roughness&#32;mapping</emphasis>
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Roughness&#32;=&#32;0.5f;
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a3f9cec2c7902c056f501af31ee6e4692">Boolean</link>&#32;EnableRoughnessMap&#32;=&#32;<emphasis role="keyword">false</emphasis>;
395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ambient&#32;occlusion&#32;mapping</emphasis>
396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;AO&#32;=&#32;0.5f;
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a3f9cec2c7902c056f501af31ee6e4692">Boolean</link>&#32;EnableAOMap&#32;=&#32;<emphasis role="keyword">false</emphasis>;
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;emission&#32;mapping</emphasis>
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Emission&#32;=&#32;{&#32;0,&#32;0,&#32;0&#32;};
400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a3f9cec2c7902c056f501af31ee6e4692">Boolean</link>&#32;EnableEmissionMap&#32;=&#32;<emphasis role="keyword">false</emphasis>;
401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
402 
403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_material_data_buffer">sMaterialDataBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;sMaterialData&gt;
404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_material_data_buffer_1a24c897ffa0035d3b57a316b9bed12681">sMaterialDataBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>&#32;=&#32;0)&#32;:&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_material_data">sMaterialData</link>&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>,&#32;<link linkend="_macro__constants_8hpp_1a1371de9c80b3be24ab606e5ed2579bc0">K_SLOT_MATERIALS</link>)&#32;{}
406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
407 
408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_shadow_pcf">sShadowPcf</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;FilterSize&#32;=&#32;0;
411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;MinBias&#32;=&#32;0.005f;
412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;MaxBias&#32;=&#32;0.05f;
413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_pad0&#32;=&#32;0;
414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
415 
416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_shadow_pcf_buffer">sShadowPcfBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer">sItemBuffer</link>&lt;sShadowPcf&gt;
417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_shadow_pcf_buffer_1a15ee482a3ca4ad56d204c9b42a1d32fe">sShadowPcfBuffer</link>()&#32;:&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer">sItemBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_shadow_pcf">sShadowPcf</link>&gt;(<link linkend="_macro__constants_8hpp_1ab00ecd5c7aa4b113b5ef03024f2b4eef">K_SLOT_SHADOW_PCF</link>)&#32;{}
419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
420 
421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_skeleton_data">sSkeletonData</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_skeleton_data_1ad2594ed74f7327381b359397c437918b">Transform</link>;
424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
425 
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_skeleton_buffer">sSkeletonBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;sSkeletonData&gt;
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_skeleton_buffer_1a7243684d82246406babfc0c7fdcfb87e">sSkeletonBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>&#32;=&#32;0)&#32;:&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_skeleton_data">sSkeletonData</link>&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>,&#32;<link linkend="_macro__constants_8hpp_1a9c625f55e51989edd74d1ce9c4df4776">K_SLOT_SKELETONS</link>)&#32;{}
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
430 
431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_ssao_data">sSsaoData</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;DirectionCount&#32;=&#32;4;
434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;SampleCount&#32;=&#32;4;
435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Intensity&#32;=&#32;1.0;
436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;_pad0&#32;=&#32;0;
437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
438 
439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_ssao_buffer">sSsaoBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer">sItemBuffer</link>&lt;sSsaoData&gt;
440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_ssao_buffer_1a2076be8e0a3425119cf1f689a381f9e7">sSsaoBuffer</link>()&#32;:&#32;<link linkend="_structxpe_1_1render_1_1s_item_buffer">sItemBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_ssao_data">sSsaoData</link>&gt;(<link linkend="_macro__constants_8hpp_1a4e22ca4479658148746f876744072766">K_SLOT_SSAO</link>)&#32;{}
442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
443 
444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_widget_data">sWidgetData</link>
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_widget_data_1a9e8bc056154a9227065af02172575649">ModelMatrix</link>;
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_widget_data_1a9aa539ba8144470a6fbb07dadd26ee13">Projection</link>;
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec4&#32;Color&#32;=&#32;{&#32;1,&#32;1,&#32;1,&#32;1&#32;};
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a3f9cec2c7902c056f501af31ee6e4692">Boolean</link>&#32;HasTexture&#32;=&#32;<emphasis role="keyword">false</emphasis>;
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2&#32;AtlasUV[4]&#32;=&#32;{
451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2(0),
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2(0),
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2(0),
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2(0)
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
457 
458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_widget_buffer">sWidgetBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;sWidgetData&gt;
459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_widget_buffer_1a22c1d6f353d7c5ac31eb6ec322999734">sWidgetBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>&#32;=&#32;0)&#32;:&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_widget_data">sWidgetData</link>&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>,&#32;<link linkend="_macro__constants_8hpp_1aeee5bb13dd29a33510cf6eedb79e688f">K_SLOT_WIDGETS</link>)&#32;{}
461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
462 
463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_char">sChar</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;TextIndex&#32;=&#32;0;
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1render_1a2fe1f6d43d54e1296405a1f31ebe4a50">GlyphSize</link>&#32;=&#32;0;
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;Width&#32;=&#32;0;
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;Height&#32;=&#32;0;
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a6e36d935ef09f3b1505f7e5ae139c91e">Left</link>&#32;=&#32;0;
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;Top&#32;=&#32;0;
471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;AdvanceX&#32;=&#32;0;
472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;AdvanceY&#32;=&#32;0;
473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;AtlasXOffset&#32;=&#32;0;
474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1ac96cda3a207e0a6466eefd15632420f7">f32</link>&#32;AtlasYOffset&#32;=&#32;0;
475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
476 
477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_char_buffer">sCharBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;sChar&gt;
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_char_buffer_1a818e3d4f8caec4326dc1914c9ab56a7d">sCharBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>&#32;=&#32;0)&#32;:&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_char">sChar</link>&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>,&#32;<link linkend="_macro__constants_8hpp_1aa497b187bf5238d20687fe45bd2fa864">K_SLOT_CHARS</link>)&#32;{}
480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
481 
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_text">sText</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_text_1a19e0f3fba1b41d0ea4265af6901a00d9">ModelMatrix</link>;
485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::mat4&#32;<link linkend="_structxpe_1_1render_1_1s_text_1aea4593415cab5e84525eb8038830bc35">Projection</link>;
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec4&#32;Color&#32;=&#32;{&#32;1,&#32;1,&#32;1,&#32;1&#32;};
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
488 
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_text_buffer">sTextBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;sText&gt;
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_text_buffer_1ab50af674e2ded70cd1ba6879a7abd6b9">sTextBuffer</link>(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>&#32;=&#32;0)&#32;:&#32;<link linkend="_classxpe_1_1render_1_1s_list_buffer">sListBuffer</link>&lt;<link linkend="_structxpe_1_1render_1_1s_text">sText</link>&gt;(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">count</link>,&#32;<link linkend="_macro__constants_8hpp_1a696e064280b9ae46de00c7796e6729bf">K_SLOT_TEXTS</link>)&#32;{}
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
493 
494 &#32;&#32;&#32;&#32;}
495 
496 }
</programlisting></section>
