<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_physics_2allocators_8hpp_source" xml:lang="en-US">
<title>allocators.hpp</title>
<indexterm><primary>engine/src/physics/allocators.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="preprocessor">#include&#32;&lt;PxPhysicsAPI.h&gt;</emphasis>
4 
5 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacexpe">xpe</link>&#32;{
6 
7 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>physics&#32;{
8 
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>core;
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespacephysx">physx</link>;
11 
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_classxpe_1_1physics_1_1c_physics_allocator">cPhysicsAllocator</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;physx::PxAllocatorCallback
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
14 
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classxpe_1_1physics_1_1c_physics_allocator">~cPhysicsAllocator</link>()&#32;<emphasis role="keyword">override</emphasis>;
17 
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;allocate(<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">size</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">typeName</link>,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">filename</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">line</link>)&#32;<emphasis role="keyword">override</emphasis>;
19 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;deallocate(<emphasis role="keywordtype">void</emphasis>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">ptr</link>)&#32;<emphasis role="keyword">override</emphasis>;
20 
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
22 
23 &#32;&#32;&#32;&#32;}
24 
25 }
</programlisting></section>
