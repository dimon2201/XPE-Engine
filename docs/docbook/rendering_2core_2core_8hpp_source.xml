<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_rendering_2core_2core_8hpp_source" xml:lang="en-US">
<title>core.hpp</title>
<indexterm><primary>engine/src/rendering/core/core.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
2 
3 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacexpe">xpe</link>&#32;{
4 
5 &#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>render&#32;{
6 
7 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>core;
8 
9 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_resource">sResource</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
10 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
11 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">eViewType</link>
12 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
13 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">NONE</link>,
14 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DEPTH_STENCIL,
15 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RENDER_TARGET,
16 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SRV,
17 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UAV
18 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
19 
20 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1ad7ce5f809b1aaf3874fd64deebef7295">eMapType</link>
21 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
22 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;READ,
23 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WRITE,
24 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;READ_WRITE,
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WRITE_NO_OVERWRITE,
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;WRITE_DISCARD
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
28 
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;Instance&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;ViewInstance&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
31 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_resource_1a93eeddbfb45d323aeb270cedb8ed20e4">eViewType</link>&#32;ViewType&#32;=&#32;eViewType::NONE;
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
33 
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1a1ed914ac1656a886e026259749d31100">ePrimitiveTopology</link>
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a1ed914ac1656a886e026259749d31100a14d20da17f6d27fc43c5f311c17eb912">TRIANGLE_LIST</link>,
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a1ed914ac1656a886e026259749d31100a708de017e3b83ccba21dfc9f6367d46f">TRIANGLE_STRIP</link>,
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a1ed914ac1656a886e026259749d31100ad2632e54a7b9520714554554f4b9619d">POINT_LIST</link>,
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a1ed914ac1656a886e026259749d31100a195d93c98c5e94cad21509e910f65fae">LINE_LIST</link>,
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a1ed914ac1656a886e026259749d31100ae64a4d2159ed46d077e21a505575c814">LINE_STRIP</link>,
41 
42 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa255cadb2be4fc02d14cee6e1da73ac9a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</link>&#32;=&#32;<link linkend="_namespacexpe_1_1render_1a1ed914ac1656a886e026259749d31100a14d20da17f6d27fc43c5f311c17eb912">TRIANGLE_LIST</link>
43 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
44 
45 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_buffer">sBuffer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_resource">sResource</link>
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a94462aa429bf7df8a8902f82772672ca">eType</link>
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">NONE</link>,
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VERTEX,
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;INDEX,
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ITEM,
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LIST,
54 
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CONSTANT&#32;=&#32;ITEM,
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STRUCTURED&#32;=&#32;LIST,
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
58 
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">eSubType</link>
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">NONE</link>,
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RAW,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;combined&#32;with&#32;VERTEX/INDEX/LIST&#32;buffer</emphasis>
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;APPEND,&#32;&#32;<emphasis role="comment">//&#32;combined&#32;with&#32;LIST/ITEM&#32;buffer</emphasis>
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CONSUME&#32;&#32;<emphasis role="comment">//&#32;combined&#32;with&#32;LIST/ITEM&#32;buffer</emphasis>
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
66 
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1af33d238170127123908d5da544dd5641">eUsage</link>
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa255cadb2be4fc02d14cee6e1da73ac9a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</link>,
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STATIC,
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;DYNAMIC,
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;STAGING
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
74 
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a94462aa429bf7df8a8902f82772672ca">eType</link>&#32;Type&#32;=&#32;eType::NONE;
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a191110df899fd9d31cd0cd6a802dd633">eSubType</link>&#32;SubType&#32;=&#32;eSubType::NONE;
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1af33d238170127123908d5da544dd5641">eUsage</link>&#32;Usage&#32;=&#32;eUsage::DYNAMIC;
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;StructureSize&#32;=&#32;0;
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;NumElements&#32;=&#32;0;
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;Slot&#32;=&#32;0;
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;InitialData&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
82 
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;[[<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">nodiscard</link>]]&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;<link linkend="_structxpe_1_1render_1_1s_buffer_1a2f14b04e600f8e56b9651a1e8ee32fb9">GetByteSize</link>()<emphasis role="keyword">&#32;const</emphasis>
84 <emphasis role="keyword">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis>{
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;NumElements&#32;*&#32;StructureSize;
86 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
88 
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_blob">sBlob</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;Instance&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;ByteCode&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;ByteCodeSize&#32;=&#32;0;
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
95 
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_viewport">sViewport</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1ae6ef6570753015ed6148c228eaac7bf8a6e36d935ef09f3b1505f7e5ae139c91e">Left</link>&#32;=&#32;0;
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Top&#32;=&#32;0;
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Width&#32;=&#32;0;
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;Height&#32;=&#32;0;
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;MinDepth&#32;=&#32;0;
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;MaxDepth&#32;=&#32;1;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
105 
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defined&#32;statically&#32;in&#32;sVertex&#32;classes&#32;for&#32;describing&#32;&quot;format&quot;&#32;of&#32;single&#32;vertex&#32;of&#32;geometry</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format">sVertexFormat</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
109 
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute">sAttribute</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
112 
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute_1aa1857e3d9b792c3ffcc5df4c97c7f558">eType</link>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
115 
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FLOAT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;4&#32;bytes</emphasis>
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BOOL,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;4&#32;bytes</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;INT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;4&#32;bytes</emphasis>
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;4&#32;bytes</emphasis>
120 
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC2_FLOAT,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;8&#32;bytes</emphasis>
122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC2_UINT,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;8&#32;bytes</emphasis>
123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC2_INT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;8&#32;bytes</emphasis>
124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC2_TYPELESS,&#32;&#32;<emphasis role="comment">//&#32;8&#32;bytes</emphasis>
125 
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC3_FLOAT,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;12&#32;bytes</emphasis>
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC3_UINT,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;12&#32;bytes</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC3_INT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;12&#32;bytes</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC3_TYPELESS,&#32;&#32;<emphasis role="comment">//&#32;12&#32;bytes</emphasis>
130 
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC4_FLOAT,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;16&#32;bytes</emphasis>
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC4_UINT,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;16&#32;bytes</emphasis>
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC4_INT,&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;16&#32;bytes</emphasis>
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VEC4_TYPELESS,&#32;&#32;<emphasis role="comment">//&#32;16&#32;bytes</emphasis>
135 
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MAT2X2,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;16&#32;bytes</emphasis>
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MAT3X3,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;36&#32;bytes</emphasis>
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MAT4X4,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;64&#32;bytes</emphasis>
139 
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
141 
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa507c1ad5e6e22c6561d60671555dafc">u32</link>&#32;Location&#32;=&#32;0;
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;Name&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute_1aa1857e3d9b792c3ffcc5df4c97c7f558">eType</link>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute_1aacbad07880eb7032bf022569b19eeb02">Format</link>;
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>&#32;ByteSize&#32;=&#32;0;
146 
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
148 
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;sAttribute&gt;&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1a3c026eb4dcd45fb6098139226607ca8e">Attributes</link>;&#32;<emphasis role="comment">//&#32;used&#32;std::vector,&#32;because&#32;sVertexFormat&#32;is&#32;always&#32;defined&#32;as&#32;static&#32;var&#32;in&#32;sVertex&#32;class</emphasis>
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">usize</link>&#32;Stride&#32;=&#32;0;
151 
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1ad5ee011700f7287bd7b6ff25b5462c6c">sVertexFormat</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1a365ec2d3f52b48c6ab3eb474e3401e03">sVertexFormat</link>(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;sAttribute&gt;&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">attributes</link>);
154 
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
156 
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;define&#32;here&#32;any&#32;custom&#32;attributes&#32;that&#32;you&#32;want&#32;to&#32;use&#32;in&#32;your&#32;vertex&#32;shader</emphasis>
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_attributes">sAttributes</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute">sVertexFormat::sAttribute</link>&#32;k_Pos&#32;=&#32;{&#32;0,&#32;<emphasis role="stringliteral">&quot;XPE_POSITION&quot;</emphasis>,&#32;sVertexFormat::sAttribute::eType::VEC3_FLOAT,&#32;12&#32;};
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute">sVertexFormat::sAttribute</link>&#32;k_UV&#32;=&#32;{&#32;1,&#32;<emphasis role="stringliteral">&quot;XPE_UV&quot;</emphasis>,&#32;sVertexFormat::sAttribute::eType::VEC2_FLOAT,&#32;8&#32;};
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute">sVertexFormat::sAttribute</link>&#32;k_Normal&#32;=&#32;{&#32;2,&#32;<emphasis role="stringliteral">&quot;XPE_NORMAL&quot;</emphasis>,&#32;sVertexFormat::sAttribute::eType::VEC3_FLOAT,&#32;12&#32;};
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute">sVertexFormat::sAttribute</link>&#32;k_Tangent&#32;=&#32;{&#32;3,&#32;<emphasis role="stringliteral">&quot;XPE_TANGENT&quot;</emphasis>,&#32;sVertexFormat::sAttribute::eType::VEC3_FLOAT,&#32;12&#32;};
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute">sVertexFormat::sAttribute</link>&#32;k_BoneIds&#32;=&#32;{&#32;4,&#32;<emphasis role="stringliteral">&quot;XPE_BONE_IDS&quot;</emphasis>,&#32;sVertexFormat::sAttribute::eType::VEC4_INT,&#32;16&#32;};
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format_1_1s_attribute">sVertexFormat::sAttribute</link>&#32;k_BoneWeights&#32;=&#32;{&#32;5,&#32;<emphasis role="stringliteral">&quot;XPE_BONE_WEIGHTS&quot;</emphasis>,&#32;sVertexFormat::sAttribute::eType::VEC4_FLOAT,&#32;16&#32;};
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
167 
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex">sVertex</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format">sVertexFormat</link>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_1a82bd9ee50a012b35683065a507c0310e">k_Format</link>;
171 
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Position&#32;=&#32;{&#32;0,&#32;0,&#32;0&#32;};
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec2&#32;UV&#32;=&#32;{&#32;0,&#32;0&#32;};
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Normal&#32;=&#32;{&#32;0,&#32;0,&#32;0&#32;};
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec3&#32;Tangent&#32;=&#32;{&#32;0,&#32;0,&#32;0&#32;};
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::ivec4&#32;BoneIDs&#32;=&#32;{&#32;-1,&#32;-1,&#32;-1,&#32;-1&#32;};
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glm::vec4&#32;BoneWeights&#32;=&#32;{&#32;0,&#32;0,&#32;0,&#32;0&#32;};
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
179 
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_json_8hpp_1a64a0d7950ac2a45cdc342a649e970f96">JSON</link>(
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_vertex">sVertex</link>,
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Position,
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UV,
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Normal,
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Tangent,
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BoneIDs,
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BoneWeights
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
189 
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">sInputLayout</link>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">final</link>
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;Instance;
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_blob">sBlob</link>*&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">VertexBlob</link>&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format">sVertexFormat</link>&#32;Format;
195 
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">sInputLayout</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">sInputLayout</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structxpe_1_1render_1_1s_vertex_format">sVertexFormat</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">format</link>)&#32;:&#32;Format(<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">format</link>)&#32;{}
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
199 
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1a56b413432be5a427db344339041ed542">eDepthWriteMask</link>&#32;{
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a56b413432be5a427db344339041ed542a529e9e0beb5f85d1f132917c1a09860c">ZERO</link>&#32;=&#32;0,
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618eae8d0dfe7c060638bef4030ce7aa1fcd1">ALL</link>&#32;=&#32;1
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
204 
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927">eDepthStencilFunc</link>&#32;{
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a443475558f0168dff92ecde26b98ae5a">NEVER</link>&#32;=&#32;1,
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a1798e8c3621ca53d9e3a80d257306000">LESS</link>&#32;=&#32;2,
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a969f331a87d8c958473c32b4d0e61a44">EQUAL</link>&#32;=&#32;3,
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a8b4a5cd69b217bf93b054ada7f49abd4">LESS_EQUAL</link>&#32;=&#32;4,
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927ae7e72355289e404b762d4cf88824d23b">GREATER</link>&#32;=&#32;5,
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a4ea2d378cdec20f59330f113297bc1ce">NOT_EQUAL</link>&#32;=&#32;6,
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927a87e6b203bf40967d37a33f9a4438561a">GREATER_EQUAL</link>&#32;=&#32;7,
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927af3fc827ade4b968e50406496907ef962">ALWAYS</link>&#32;=&#32;8,
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
215 
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409">eDepthStencilOp</link>&#32;{
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409a60cba2874369bd3790e14ea5f8a7bc58">KEEP</link>&#32;=&#32;1,
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a56b413432be5a427db344339041ed542a529e9e0beb5f85d1f132917c1a09860c">ZERO</link>&#32;=&#32;2,
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409a560a2dd6f6744646473b3b19e1fe96d7">REPLACE</link>&#32;=&#32;3,
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409a5a5305a172cd658125cfa47646dceba1">INCR_SAT</link>&#32;=&#32;4,
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409a5becedb7820af09b129428cea781c7ca">DECR_SAT</link>&#32;=&#32;5,
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409aa2727ae72447eea06d4cc0ef67187280">INVERT</link>&#32;=&#32;6,
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409afc67535e5273d466beba3c06c0dbd988">INCR</link>&#32;=&#32;7,
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409ac121b991572aba8a5789d08d7e9cf76e">DECR</link>&#32;=&#32;8
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
226 
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_stencil_test">sStencilTest</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409">eDepthStencilOp</link>&#32;StencilFailOp&#32;=&#32;eDepthStencilOp::KEEP;
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409">eDepthStencilOp</link>&#32;StencilDepthFailOp&#32;=&#32;eDepthStencilOp::KEEP;
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1afd9133f65cb93b6650a0ba29806d1409">eDepthStencilOp</link>&#32;StencilPassOp&#32;=&#32;eDepthStencilOp::KEEP;
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927">eDepthStencilFunc</link>&#32;StencilFunc&#32;=&#32;eDepthStencilFunc::ALWAYS;
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
234 
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_depth_stencil_mode">sDepthStencilMode</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;State&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;EnableDepth&#32;=&#32;<emphasis role="keyword">true</emphasis>;
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a56b413432be5a427db344339041ed542">eDepthWriteMask</link>&#32;DepthWriteMask&#32;=&#32;eDepthWriteMask::ALL;
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1abb3c1d6aed9b08a7c4da9ec1c14ec927">eDepthStencilFunc</link>&#32;DepthFunc&#32;=&#32;eDepthStencilFunc::LESS;
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;EnableStencil&#32;=&#32;<emphasis role="keyword">false</emphasis>;
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>&#32;StencilReadMask&#32;=&#32;0xff;
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>&#32;StencilWriteMask&#32;=&#32;0xff;
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_stencil_test">sStencilTest</link>&#32;<link linkend="_structxpe_1_1render_1_1s_depth_stencil_mode_1ab2b267937c57cd76fe2e8f1cbb891a13">FrontFace</link>;
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_stencil_test">sStencilTest</link>&#32;<link linkend="_structxpe_1_1render_1_1s_depth_stencil_mode_1a4cc28988c2066d96a4da0c96e9bedbc3">BackFace</link>;
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
247 
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22c">eBlend</link>&#32;{
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a56b413432be5a427db344339041ed542a529e9e0beb5f85d1f132917c1a09860c">ZERO</link>&#32;=&#32;1,
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22cabc21e6484530fc9d0313cb816b733396">ONE</link>&#32;=&#32;2,
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca0d64e73cd04f53e815a849347285839e">SRC_COLOR</link>&#32;=&#32;3,
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca5e4fced94ef5e9710ce78137845fa25c">INV_SRC_COLOR</link>&#32;=&#32;4,
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22caa01be6519d4fb614f16261a59958bbb4">SRC_ALPHA</link>&#32;=&#32;5,
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca17595667cd320b6e679472da7a32e4c5">INV_SRC_ALPHA</link>&#32;=&#32;6,
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22cae9f1eb5f70dec83523dc8c5ed48975bb">DEST_ALPHA</link>&#32;=&#32;7,
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca8a1073afa63c32ab6ba7c1c34874675e">INV_DEST_ALPHA</link>&#32;=&#32;8,
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca40e4540ce040c52d2070b2b19f590ded">DEST_COLOR</link>&#32;=&#32;9,
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22caee898522202ff79c0e99fe097f12dfd1">INV_DEST_COLOR</link>&#32;=&#32;10,
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca6fbee7e1f50ab11b3548fe4d66edb33b">SRC_ALPHA_SAT</link>&#32;=&#32;11,
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca6582a89c86055442e24b63ce8ef51a11">BLEND_FACTOR</link>&#32;=&#32;14,
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca21d378651720cb4455d53e2cf313c5e7">INV_BLEND_FACTOR</link>&#32;=&#32;15,
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca66d0eeba66efb4330b4282febabb5376">SRC1_COLOR</link>&#32;=&#32;16,
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca9ffd5c40e7ef30789f03bddf3fdd2b0b">INV_SRC1_COLOR</link>&#32;=&#32;17,
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22ca9093618941290447db0d37e48f60f82a">SRC1_ALPHA</link>&#32;=&#32;18,
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22cab0b7d955c7fa184d61392db88e403251">INV_SRC1_ALPHA</link>&#32;=&#32;19
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
267 
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1a6267ae08d343761595b6aa7932961025">eBlendOp</link>&#32;{
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a6267ae08d343761595b6aa7932961025a9eeb52badb613229884838847294b90d">ADD</link>&#32;=&#32;1,
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a6267ae08d343761595b6aa7932961025a23ebcc4776b613af25dfbe7c8ce4813e">SUBTRACT</link>&#32;=&#32;2,
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a6267ae08d343761595b6aa7932961025ad1ce55434a47514db52d9706a79eaf7b">REV_SUBTRACT</link>&#32;=&#32;3,
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a6267ae08d343761595b6aa7932961025ace31e2a082d17e038fcc6e3006166653">MIN</link>&#32;=&#32;4,
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a6267ae08d343761595b6aa7932961025a26a4b44a837bf97b972628509912b4a5">MAX</link>&#32;=&#32;5
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
275 
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618e">eColorWriteEnableMask</link>&#32;:&#32;<link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>&#32;{
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618ea6d9a3b389a702f29ef14d867ed7aef9c">RED</link>&#32;=&#32;1,
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618ea054dc054cec517a54f25d8a38b3c3dd0">GREEN</link>&#32;=&#32;2,
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618ea2f85853946b7cc49fce605cbe307c916">BLUE</link>&#32;=&#32;4,
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618eafbc64e20f8fda25c03e032a359e22743">ALPHA</link>&#32;=&#32;8,
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618eae8d0dfe7c060638bef4030ce7aa1fcd1">ALL</link>&#32;=&#32;(((<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618ea6d9a3b389a702f29ef14d867ed7aef9c">RED</link>&#32;|&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618ea054dc054cec517a54f25d8a38b3c3dd0">GREEN</link>)&#32;|&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618ea2f85853946b7cc49fce605cbe307c916">BLUE</link>)&#32;|&#32;<link linkend="_namespacexpe_1_1render_1a7c37d1dd6c9b619ebef5a38235c2618eafbc64e20f8fda25c03e032a359e22743">ALPHA</link>)
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
283 
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_blend_target">sBlendTarget</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Enable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22c">eBlend</link>&#32;Src&#32;=&#32;eBlend::ONE;
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22c">eBlend</link>&#32;Dest&#32;=&#32;eBlend::ZERO;
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a6267ae08d343761595b6aa7932961025">eBlendOp</link>&#32;BlendOp&#32;=&#32;eBlendOp::ADD;
290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22c">eBlend</link>&#32;SrcAlpha&#32;=&#32;eBlend::ONE;
291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a64832e2bcfa081e507f4237e8bebe22c">eBlend</link>&#32;DestAlpha&#32;=&#32;eBlend::ZERO;
292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a6267ae08d343761595b6aa7932961025">eBlendOp</link>&#32;BlendOpAlpha&#32;=&#32;eBlendOp::ADD;
293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a13fec7f69dcb34583a9c88a8c2d85ab6">u8</link>&#32;RenderTargetWriteMask&#32;=&#32;eColorWriteEnableMask::ALL;
294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
295 
296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_blend_mode">sBlendMode</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;State&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;AlphaToCoverageEnable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;IndependentBlendEnable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;blend&#32;mode&#32;can&#32;only&#32;have&#32;maximum&#32;8&#32;targets&#32;per&#32;passes</emphasis>
302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sBlendTarget&gt;</link>&#32;<link linkend="_structxpe_1_1render_1_1s_blend_mode_1aa8076ad01299d22001e4473079ac6511">Targets</link>;
303 
304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_blend_mode_1ab53a1189aea4bd652a632bf1b101d98e">sBlendMode</link>()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_blend_mode">sBlendMode</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">vector&lt;sBlendTarget&gt;</link>&amp;&#32;<link linkend="_namespacexpe_1_1core_1a7a9b1d92471db2af59acf8c301267fde">targets</link>);
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structxpe_1_1render_1_1s_blend_mode">~sBlendMode</link>();
307 
308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Bind();
309 
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Init();
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
313 
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1af084fc3ad14c992e70a372f3d237bf84">eFillMode</link>&#32;{
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1af084fc3ad14c992e70a372f3d237bf84a43ea8c7cefb63ec314b4df5628cba577">WIREFRAME</link>,
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1af084fc3ad14c992e70a372f3d237bf84ad0dea69649a83749aa6bdf176092e8c9">SOLID</link>,
317 
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa255cadb2be4fc02d14cee6e1da73ac9a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</link>&#32;=&#32;<link linkend="_namespacexpe_1_1render_1af084fc3ad14c992e70a372f3d237bf84ad0dea69649a83749aa6bdf176092e8c9">SOLID</link>
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
320 
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacexpe_1_1render_1a70a8f9b1d613e1174531c58b493c2ef9">eCullMode</link>&#32;{
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">NONE</link>,
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a70a8f9b1d613e1174531c58b493c2ef9abb2fe5c916efb43aab8cbb68f997d2ee">FRONT</link>,
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a70a8f9b1d613e1174531c58b493c2ef9a1dd26f1f1790f0b56d5752fb0fbecef0">BACK</link>,
325 
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1core_1aa255cadb2be4fc02d14cee6e1da73ac9a5b39c8b553c821e7cddc6da64b5bd2ee">DEFAULT</link>&#32;=&#32;<link linkend="_namespacexpe_1_1physics_1a11de4146993380edd87e664894f5438eab50339a10e1de285ac99d4c3990b8693">NONE</link>,
327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
328 
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_macro__build_8hpp_1a0697ee40f69dc5dab56d13131f4c4835">ENGINE_API</link>&#32;<link linkend="_structxpe_1_1render_1_1s_rasterizer">sRasterizer</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classxpe_1_1core_1_1c_object">cObject</link>
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>*&#32;&#32;&#32;&#32;&#32;State&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1af084fc3ad14c992e70a372f3d237bf84">eFillMode</link>&#32;FillMode&#32;=&#32;eFillMode::DEFAULT;
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespacexpe_1_1render_1a70a8f9b1d613e1174531c58b493c2ef9">eCullMode</link>&#32;CullMode&#32;=&#32;eCullMode::DEFAULT;
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;FrontCounterClockwise&#32;=&#32;<emphasis role="keyword">false</emphasis>;
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;DepthBias&#32;=&#32;0;
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;&#32;&#32;DepthBiasClamp&#32;=&#32;0;
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;&#32;&#32;&#32;&#32;SlopeScaledDepthBias&#32;=&#32;0;
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;DepthClipEnable&#32;=&#32;<emphasis role="keyword">true</emphasis>;
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;ScissorEnable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;MultisampleEnable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;AntialiasedLineEnable&#32;=&#32;<emphasis role="keyword">false</emphasis>;
342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
343 
344 &#32;&#32;&#32;&#32;}
345 
346 }
</programlisting></section>
