struct VSOut
{
    float4 positionClip : SV_POSITION;
    float2 texcoord : XPE_UV;
};

struct PSOut
{
    float4 color : SV_Target0;
};

Texture2D<float4> ColorTexture : register(t0);
Texture2D<float4> AccumTexture : register(t1);
Texture2D<float> RevealTexture : register(t2);
Texture2D<float4> AOTexture : register(t3);

PSOut ps_main(VSOut psIn)
{
    uint width = 0;
    uint height = 0;
    ColorTexture.GetDimensions(width, height);

    float4 color = float4(0.0);
    float4 accum = ColorTexture.Load(int3(psIn.texcoord * float2(width, height), 0));
    if (dot(accum, accum) == 0.0)
    {
        color = ColorTexture.Load(int3(psIn.texcoord * float2(width, height), 0));
    }
    else
    {
        float reveal = RevealTexture.Load(int3(psIn.texcoord * float2(width, height), 0));
        color = float4(accum.xyz / max(accum.a, 1e-5), reveal);
    }

    color *= AOTexture.Load(int3(psIn.texcoord * float2(width, height), 0));

    PSOut psOut;
    psOut.color = color;

    return psOut;
}