#include ../types.shader
#include ../gamma_correction.shader

Texture2DArray WidgetAtlas     : K_SLOT_WIDGET_ATLAS;
SamplerState   WidgetSampler   : K_SLOT_WIDGET_SAMPLER;

struct VSOut
{
    float2 uv : XPE_UV2;
    float4 positionNDC : SV_POSITION;
    float4 color : XPE_WIDGET_COLOR;
    bool enableTexture : XPE_WIDGET_ENABLE_TEXTURE;
    float gamma : XPE_GAMMA;
};

struct PSOut
{
    float4 color : SV_Target0;
};

PSOut ps_main(VSOut psIn)
{
    PSOut psOut;

    float2 uv = psIn.uv;
    float4 color = psIn.color;
    bool enableTexture = psIn.enableTexture;
    float gamma = psIn.gamma;

    if (enableTexture) {
        color *= WidgetAtlas.Sample(WidgetSampler, float3(uv, 0));
        color = pow(abs(color), gamma);
    }

    psOut.color = GammaCorrection(color, gamma);

    return psOut;
}